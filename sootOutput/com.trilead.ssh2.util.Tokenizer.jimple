public class com.trilead.ssh2.util.Tokenizer extends java.lang.Object
{

    public static java.lang.String[] parseTokens(java.lang.String, char)
    {
        java.lang.String $r0, $r2;
        char $c0, $c4;
        int $i1, $i2, $i3, $i5, $i6;
        java.lang.String[] $r1;

        $r0 := @parameter0: java.lang.String;

        $c0 := @parameter1: char;

        $i3 = 1;

        $i1 = 0;

     label1:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label3;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        if $c4 != $c0 goto label2;

        $i3 = $i3 + 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r1 = newarray (java.lang.String)[$i3];

        $i2 = 0;

        $i5 = 0;

     label4:
        if $i5 >= $i3 goto label8;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i2 < $i1 goto label6;

        $r1[$i5] = "";

     label5:
        $i5 = $i5 + 1;

        goto label4;

     label6:
        $i6 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>($c0, $i2);

        $i1 = $i6;

        if $i6 != -1 goto label7;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label7:
        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i1);

        $r1[$i5] = $r2;

        $i2 = $i1 + 1;

        goto label5;

     label8:
        return $r1;
    }
}
