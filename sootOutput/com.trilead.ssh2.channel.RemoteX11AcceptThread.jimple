public class com.trilead.ssh2.channel.RemoteX11AcceptThread extends java.lang.Thread
{
    private static final com.trilead.ssh2.log.Logger log;
    com.trilead.ssh2.channel.Channel c;
    java.lang.String remoteOriginatorAddress;
    int remoteOriginatorPort;
    java.net.Socket s;

    static void <clinit>()
    {
        com.trilead.ssh2.log.Logger $r0;

        $r0 = staticinvoke <com.trilead.ssh2.log.Logger: com.trilead.ssh2.log.Logger getLogger(java.lang.Class)>(class "com/trilead/ssh2/channel/RemoteX11AcceptThread");

        <com.trilead.ssh2.channel.RemoteX11AcceptThread: com.trilead.ssh2.log.Logger log> = $r0;

        return;
    }

    public void <init>(com.trilead.ssh2.channel.Channel, java.lang.String, int)
    {
        com.trilead.ssh2.channel.RemoteX11AcceptThread $r0;
        com.trilead.ssh2.channel.Channel $r1;
        java.lang.String $r2;
        int $i0;

        $r0 := @this: com.trilead.ssh2.channel.RemoteX11AcceptThread;

        $r1 := @parameter0: com.trilead.ssh2.channel.Channel;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        specialinvoke $r0.<java.lang.Thread: void <init>()>();

        $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: com.trilead.ssh2.channel.Channel c> = $r1;

        $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: java.lang.String remoteOriginatorAddress> = $r2;

        $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: int remoteOriginatorPort> = $i0;

        return;
    }

    public void run()
    {
        com.trilead.ssh2.channel.RemoteX11AcceptThread $r0;
        com.trilead.ssh2.channel.StreamForwarder $r1, $r24;
        com.trilead.ssh2.channel.Channel $r2, $r19;
        java.lang.StringBuilder $r3;
        byte[] $r4, $r11, $r15, $r16, $r17;
        int $i0, $i1, $i2, $i3, $i7;
        java.lang.String $r5, $r18;
        java.io.IOException $r6, $r12, $r26;
        byte $b4, $b5;
        java.lang.StringBuffer $r7;
        com.trilead.ssh2.channel.ChannelOutputStream $r8;
        com.trilead.ssh2.channel.ChannelManager $r9;
        com.trilead.ssh2.channel.ChannelInputStream $r10;
        com.trilead.ssh2.log.Logger $r13;
        java.net.Socket $r14;
        short $s6;
        boolean $z0;
        com.trilead.ssh2.channel.X11ServerData $r20;
        java.lang.Throwable $r21;
        java.io.OutputStream $r22;
        java.io.InputStream $r23;
        java.lang.InterruptedException $r25;

        $r0 := @this: com.trilead.ssh2.channel.RemoteX11AcceptThread;

        $r2 = $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: com.trilead.ssh2.channel.Channel c>;

        $r9 = $r2.<com.trilead.ssh2.channel.Channel: com.trilead.ssh2.channel.ChannelManager cm>;

        $r2 = $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: com.trilead.ssh2.channel.Channel c>;

     label01:
        virtualinvoke $r9.<com.trilead.ssh2.channel.ChannelManager: void sendOpenConfirmation(com.trilead.ssh2.channel.Channel)>($r2);

        $r2 = $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: com.trilead.ssh2.channel.Channel c>;

        $r8 = virtualinvoke $r2.<com.trilead.ssh2.channel.Channel: com.trilead.ssh2.channel.ChannelOutputStream getStdinStream()>();

        $r2 = $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: com.trilead.ssh2.channel.Channel c>;

        $r10 = virtualinvoke $r2.<com.trilead.ssh2.channel.Channel: com.trilead.ssh2.channel.ChannelInputStream getStdoutStream()>();

        $r11 = newarray (byte)[6];

        $i3 = virtualinvoke $r10.<java.io.InputStream: int read(byte[])>($r11);

     label02:
        if $i3 == 6 goto label09;

     label03:
        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("Unexpected EOF on X11 startup!");

        throw $r12;

     label04:
        $r6 := @caughtexception;

        $r13 = <com.trilead.ssh2.channel.RemoteX11AcceptThread: com.trilead.ssh2.log.Logger log>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException in X11 proxy code: ");

        $r5 = virtualinvoke $r6.<java.io.IOException: java.lang.String getMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<com.trilead.ssh2.log.Logger: void log(int,java.lang.String)>(50, $r5);

        $r2 = $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: com.trilead.ssh2.channel.Channel c>;

        $r9 = $r2.<com.trilead.ssh2.channel.Channel: com.trilead.ssh2.channel.ChannelManager cm>;

        $r2 = $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: com.trilead.ssh2.channel.Channel c>;

        $r3 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException in X11 proxy code (");

        $r5 = virtualinvoke $r6.<java.io.IOException: java.lang.String getMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<com.trilead.ssh2.channel.ChannelManager: void closeChannel(com.trilead.ssh2.channel.Channel,java.lang.String,boolean)>($r2, $r5, 1);

     label06:
        $r14 = $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: java.net.Socket s>;

        if $r14 == null goto label76;

        $r14 = $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: java.net.Socket s>;

     label07:
        virtualinvoke $r14.<java.net.Socket: void close()>();

     label08:
        return;

     label09:
        $b4 = $r11[0];

        if $b4 == 66 goto label11;

        $b4 = $r11[0];

        if $b4 == 108 goto label11;

        $r12 = new java.io.IOException;

     label10:
        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("Unknown endian format in X11 message!");

        throw $r12;

     label11:
        $b4 = $r11[0];

        if $b4 != 66 goto label15;

        $b4 = 0;

     label12:
        $r15 = newarray (byte)[6];

        $i3 = virtualinvoke $r10.<java.io.InputStream: int read(byte[])>($r15);

     label13:
        if $i3 == 6 goto label16;

     label14:
        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("Unexpected EOF on X11 startup!");

        throw $r12;

     label15:
        $b4 = 1;

        goto label12;

     label16:
        $b5 = $r15[$b4];

        $s6 = $b5 & 255;

        $i3 = $s6 << 8;

        $i2 = 1 - $b4;

        $b5 = $r15[$i2];

        $s6 = $b5 & 255;

        $i2 = $i3 | $s6;

        $i3 = $b4 + 2;

        $b5 = $r15[$i3];

        $s6 = $b5 & 255;

        $i3 = $s6 << 8;

        $i1 = 3 - $b4;

        $b5 = $r15[$i1];

        $s6 = $b5 & 255;

        $i0 = $i3 | $s6;

        if $i2 > 256 goto label17;

        if $i0 <= 256 goto label18;

     label17:
        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("Buggy X11 authorization data");

        throw $r12;

     label18:
        $i3 = $i2 % 4;

        $i3 = 4 - $i3;

        $i3 = $i3 % 4;

        $i1 = $i0 % 4;

        $i1 = 4 - $i1;

        $i1 = $i1 % 4;

        $r16 = newarray (byte)[$i2];

        $r4 = newarray (byte)[$i0];

     label19:
        $r17 = newarray (byte)[4];

        $i7 = virtualinvoke $r10.<java.io.InputStream: int read(byte[])>($r16);

        if $i7 == $i2 goto label20;

        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("Unexpected EOF on X11 startup! (authProtocolName)");

        throw $r12;

     label20:
        $i7 = virtualinvoke $r10.<java.io.InputStream: int read(byte[],int,int)>($r17, 0, $i3);

        if $i7 == $i3 goto label21;

        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("Unexpected EOF on X11 startup! (authProtocolNamePadding)");

        throw $r12;

     label21:
        $i7 = virtualinvoke $r10.<java.io.InputStream: int read(byte[])>($r4);

        if $i7 == $i0 goto label22;

        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("Unexpected EOF on X11 startup! (authProtocolData)");

        throw $r12;

     label22:
        $i7 = virtualinvoke $r10.<java.io.InputStream: int read(byte[],int,int)>($r17, 0, $i1);

     label23:
        if $i7 == $i1 goto label25;

     label24:
        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("Unexpected EOF on X11 startup! (authProtocolDataPadding)");

        throw $r12;

     label25:
        $r5 = "MIT-MAGIC-COOKIE-1";

     label26:
        $r18 = new java.lang.String;

        specialinvoke $r18.<java.lang.String: void <init>(byte[],java.lang.String)>($r16, "ISO-8859-1");

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r18);

     label27:
        if $z0 != 0 goto label29;

     label28:
        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("Unknown X11 authorization protocol!");

        throw $r12;

     label29:
        if $i0 == 16 goto label31;

     label30:
        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("Wrong data length for X11 authorization data!");

        throw $r12;

     label31:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>(int)>(32);

     label32:
        $i2 = 0;

     label33:
        $i7 = lengthof $r4;

     label34:
        if $i2 >= $i7 goto label42;

     label35:
        $b5 = $r4[$i2];

     label36:
        $s6 = $b5 & 255;

        $r18 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s6);

        $r5 = $r18;

        $i7 = virtualinvoke $r18.<java.lang.String: int length()>();

        if $i7 != 2 goto label39;

     label37:
        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label38:
        $i2 = $i2 + 1;

        goto label33;

     label39:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r18 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label40:
        $r5 = $r18;

     label41:
        goto label37;

     label42:
        $r18 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

     label43:
        $r2 = $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: com.trilead.ssh2.channel.Channel c>;

        entermonitor $r2;

     label44:
        $r19 = $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: com.trilead.ssh2.channel.Channel c>;

        $r19.<com.trilead.ssh2.channel.Channel: java.lang.String hexX11FakeCookie> = $r18;

        exitmonitor $r2;

     label45:
        $r19 = $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: com.trilead.ssh2.channel.Channel c>;

        $r9 = $r19.<com.trilead.ssh2.channel.Channel: com.trilead.ssh2.channel.ChannelManager cm>;

     label46:
        $r20 = virtualinvoke $r9.<com.trilead.ssh2.channel.ChannelManager: com.trilead.ssh2.channel.X11ServerData checkX11Cookie(java.lang.String)>($r18);

     label47:
        if $r20 != null goto label52;

     label48:
        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("Invalid X11 cookie received.");

        throw $r12;

     label49:
        $r21 := @caughtexception;

     label50:
        exitmonitor $r2;

     label51:
        throw $r21;

     label52:
        $r14 = new java.net.Socket;

        $r18 = $r20.<com.trilead.ssh2.channel.X11ServerData: java.lang.String hostname>;

     label53:
        $i7 = $r20.<com.trilead.ssh2.channel.X11ServerData: int port>;

        specialinvoke $r14.<java.net.Socket: void <init>(java.lang.String,int)>($r18, $i7);

     label54:
        $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: java.net.Socket s> = $r14;

     label55:
        $r14 = $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: java.net.Socket s>;

        $r22 = virtualinvoke $r14.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        $r14 = $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: java.net.Socket s>;

        $r23 = virtualinvoke $r14.<java.net.Socket: java.io.InputStream getInputStream()>();

        virtualinvoke $r22.<java.io.OutputStream: void write(byte[])>($r11);

     label56:
        $r11 = $r20.<com.trilead.ssh2.channel.X11ServerData: byte[] x11_magic_cookie>;

        if $r11 != null goto label68;

     label57:
        $r17 = newarray (byte)[6];

        virtualinvoke $r22.<java.io.OutputStream: void write(byte[])>($r17);

     label58:
        virtualinvoke $r22.<java.io.OutputStream: void flush()>();

     label59:
        $r1 = new com.trilead.ssh2.channel.StreamForwarder;

        $r19 = $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: com.trilead.ssh2.channel.Channel c>;

     label60:
        $r14 = $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: java.net.Socket s>;

        specialinvoke $r1.<com.trilead.ssh2.channel.StreamForwarder: void <init>(com.trilead.ssh2.channel.Channel,com.trilead.ssh2.channel.StreamForwarder,java.net.Socket,java.io.InputStream,java.io.OutputStream,java.lang.String)>($r19, null, $r14, $r10, $r22, "RemoteToX11");

     label61:
        $r24 = new com.trilead.ssh2.channel.StreamForwarder;

     label62:
        $r19 = $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: com.trilead.ssh2.channel.Channel c>;

        specialinvoke $r24.<com.trilead.ssh2.channel.StreamForwarder: void <init>(com.trilead.ssh2.channel.Channel,com.trilead.ssh2.channel.StreamForwarder,java.net.Socket,java.io.InputStream,java.io.OutputStream,java.lang.String)>($r19, null, null, $r23, $r8, "X11ToRemote");

        virtualinvoke $r1.<com.trilead.ssh2.channel.StreamForwarder: void setDaemon(boolean)>(1);

        virtualinvoke $r1.<com.trilead.ssh2.channel.StreamForwarder: void start()>();

        virtualinvoke $r24.<com.trilead.ssh2.channel.StreamForwarder: void run()>();

     label63:
        $z0 = virtualinvoke $r1.<com.trilead.ssh2.channel.StreamForwarder: boolean isAlive()>();

     label64:
        if $z0 == 0 goto label71;

     label65:
        virtualinvoke $r1.<com.trilead.ssh2.channel.StreamForwarder: void join()>();

     label66:
        goto label63;

     label67:
        $r25 := @caughtexception;

        goto label63;

     label68:
        $r11 = $r20.<com.trilead.ssh2.channel.X11ServerData: byte[] x11_magic_cookie>;

        $i7 = lengthof $r11;

        if $i7 == 16 goto label70;

        $r12 = new java.io.IOException;

     label69:
        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("The real X11 cookie has an invalid length!");

        throw $r12;

     label70:
        virtualinvoke $r22.<java.io.OutputStream: void write(byte[])>($r15);

        virtualinvoke $r22.<java.io.OutputStream: void write(byte[])>($r16);

        virtualinvoke $r22.<java.io.OutputStream: void write(byte[],int,int)>($r17, 0, $i3);

        $r16 = $r20.<com.trilead.ssh2.channel.X11ServerData: byte[] x11_magic_cookie>;

        virtualinvoke $r22.<java.io.OutputStream: void write(byte[])>($r16);

        virtualinvoke $r22.<java.io.OutputStream: void write(byte[],int,int)>($r17, 0, $i1);

        goto label58;

     label71:
        $r19 = $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: com.trilead.ssh2.channel.Channel c>;

        $r9 = $r19.<com.trilead.ssh2.channel.Channel: com.trilead.ssh2.channel.ChannelManager cm>;

     label72:
        $r19 = $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: com.trilead.ssh2.channel.Channel c>;

        virtualinvoke $r9.<com.trilead.ssh2.channel.ChannelManager: void closeChannel(com.trilead.ssh2.channel.Channel,java.lang.String,boolean)>($r19, "EOF on both X11 streams reached.", 1);

        $r14 = $r0.<com.trilead.ssh2.channel.RemoteX11AcceptThread: java.net.Socket s>;

        virtualinvoke $r14.<java.net.Socket: void close()>();

     label73:
        return;

     label74:
        $r26 := @caughtexception;

        return;

     label75:
        $r12 := @caughtexception;

        goto label06;

     label76:
        return;

        catch java.io.IOException from label01 to label02 with label04;
        catch java.io.IOException from label03 to label04 with label04;
        catch java.io.IOException from label05 to label06 with label75;
        catch java.io.IOException from label07 to label08 with label74;
        catch java.io.IOException from label10 to label11 with label04;
        catch java.io.IOException from label12 to label13 with label04;
        catch java.io.IOException from label14 to label15 with label04;
        catch java.io.IOException from label17 to label18 with label04;
        catch java.io.IOException from label19 to label23 with label04;
        catch java.io.IOException from label24 to label25 with label04;
        catch java.io.IOException from label26 to label27 with label04;
        catch java.io.IOException from label28 to label29 with label04;
        catch java.io.IOException from label30 to label32 with label04;
        catch java.io.IOException from label34 to label35 with label04;
        catch java.io.IOException from label36 to label38 with label04;
        catch java.io.IOException from label39 to label40 with label04;
        catch java.io.IOException from label41 to label43 with label04;
        catch java.lang.Throwable from label44 to label45 with label49;
        catch java.io.IOException from label46 to label47 with label04;
        catch java.io.IOException from label48 to label49 with label04;
        catch java.lang.Throwable from label50 to label51 with label49;
        catch java.io.IOException from label51 to label52 with label04;
        catch java.io.IOException from label53 to label54 with label04;
        catch java.io.IOException from label55 to label56 with label04;
        catch java.io.IOException from label57 to label59 with label04;
        catch java.io.IOException from label60 to label61 with label04;
        catch java.io.IOException from label62 to label64 with label04;
        catch java.lang.InterruptedException from label65 to label66 with label67;
        catch java.io.IOException from label65 to label66 with label04;
        catch java.io.IOException from label69 to label71 with label04;
        catch java.io.IOException from label72 to label73 with label04;
    }
}
