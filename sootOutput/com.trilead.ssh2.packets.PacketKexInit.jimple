public class com.trilead.ssh2.packets.PacketKexInit extends java.lang.Object
{
    com.trilead.ssh2.transport.KexParameters kp;
    byte[] payload;

    public void <init>(com.trilead.ssh2.crypto.CryptoWishList)
    {
        com.trilead.ssh2.packets.PacketKexInit $r0;
        com.trilead.ssh2.crypto.CryptoWishList $r1;
        com.trilead.ssh2.transport.KexParameters $r2;
        byte[] $r3;
        java.security.SecureRandom $r4;
        java.lang.String[] $r5;

        $r0 := @this: com.trilead.ssh2.packets.PacketKexInit;

        $r1 := @parameter0: com.trilead.ssh2.crypto.CryptoWishList;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new com.trilead.ssh2.transport.KexParameters;

        specialinvoke $r2.<com.trilead.ssh2.transport.KexParameters: void <init>()>();

        $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp> = $r2;

        $r2 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r3 = newarray (byte)[16];

        $r2.<com.trilead.ssh2.transport.KexParameters: byte[] cookie> = $r3;

        $r4 = new java.security.SecureRandom;

        specialinvoke $r4.<java.security.SecureRandom: void <init>()>();

        $r2 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r3 = $r2.<com.trilead.ssh2.transport.KexParameters: byte[] cookie>;

        virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3);

        $r2 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r5 = $r1.<com.trilead.ssh2.crypto.CryptoWishList: java.lang.String[] kexAlgorithms>;

        $r2.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] kex_algorithms> = $r5;

        $r2 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r5 = $r1.<com.trilead.ssh2.crypto.CryptoWishList: java.lang.String[] serverHostKeyAlgorithms>;

        $r2.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] server_host_key_algorithms> = $r5;

        $r2 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r5 = $r1.<com.trilead.ssh2.crypto.CryptoWishList: java.lang.String[] c2s_enc_algos>;

        $r2.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] encryption_algorithms_client_to_server> = $r5;

        $r2 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r5 = $r1.<com.trilead.ssh2.crypto.CryptoWishList: java.lang.String[] s2c_enc_algos>;

        $r2.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] encryption_algorithms_server_to_client> = $r5;

        $r2 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r5 = $r1.<com.trilead.ssh2.crypto.CryptoWishList: java.lang.String[] c2s_mac_algos>;

        $r2.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] mac_algorithms_client_to_server> = $r5;

        $r2 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r5 = $r1.<com.trilead.ssh2.crypto.CryptoWishList: java.lang.String[] s2c_mac_algos>;

        $r2.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] mac_algorithms_server_to_client> = $r5;

        $r2 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r5 = $r1.<com.trilead.ssh2.crypto.CryptoWishList: java.lang.String[] c2s_comp_algos>;

        $r2.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] compression_algorithms_client_to_server> = $r5;

        $r2 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r5 = $r1.<com.trilead.ssh2.crypto.CryptoWishList: java.lang.String[] s2c_comp_algos>;

        $r2.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] compression_algorithms_server_to_client> = $r5;

        $r2 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r5 = newarray (java.lang.String)[0];

        $r2.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] languages_client_to_server> = $r5;

        $r2 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r5 = newarray (java.lang.String)[0];

        $r2.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] languages_server_to_client> = $r5;

        $r2 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r2.<com.trilead.ssh2.transport.KexParameters: boolean first_kex_packet_follows> = 0;

        $r2 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r2.<com.trilead.ssh2.transport.KexParameters: int reserved_field1> = 0;

        return;
    }

    public void <init>(byte[], int, int) throws java.io.IOException
    {
        com.trilead.ssh2.packets.PacketKexInit $r0;
        byte[] $r1, $r4;
        int $i0, $i1;
        com.trilead.ssh2.packets.TypesReader $r2;
        com.trilead.ssh2.transport.KexParameters $r3;
        java.io.IOException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.String[] $r8;
        boolean $z0;

        $r0 := @this: com.trilead.ssh2.packets.PacketKexInit;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = new com.trilead.ssh2.transport.KexParameters;

        specialinvoke $r3.<com.trilead.ssh2.transport.KexParameters: void <init>()>();

        $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp> = $r3;

        $r4 = newarray (byte)[$i1];

        $r0.<com.trilead.ssh2.packets.PacketKexInit: byte[] payload> = $r4;

        $r4 = $r0.<com.trilead.ssh2.packets.PacketKexInit: byte[] payload>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r4, 0, $i1);

        $r2 = new com.trilead.ssh2.packets.TypesReader;

        specialinvoke $r2.<com.trilead.ssh2.packets.TypesReader: void <init>(byte[],int,int)>($r1, $i0, $i1);

        $i1 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: int readByte()>();

        if $i1 == 20 goto label1;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This is not a KexInitPacket! (");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label1:
        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r4 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: byte[] readBytes(int)>(16);

        $r3.<com.trilead.ssh2.transport.KexParameters: byte[] cookie> = $r4;

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r8 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: java.lang.String[] readNameList()>();

        $r3.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] kex_algorithms> = $r8;

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r8 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: java.lang.String[] readNameList()>();

        $r3.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] server_host_key_algorithms> = $r8;

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r8 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: java.lang.String[] readNameList()>();

        $r3.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] encryption_algorithms_client_to_server> = $r8;

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r8 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: java.lang.String[] readNameList()>();

        $r3.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] encryption_algorithms_server_to_client> = $r8;

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r8 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: java.lang.String[] readNameList()>();

        $r3.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] mac_algorithms_client_to_server> = $r8;

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r8 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: java.lang.String[] readNameList()>();

        $r3.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] mac_algorithms_server_to_client> = $r8;

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r8 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: java.lang.String[] readNameList()>();

        $r3.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] compression_algorithms_client_to_server> = $r8;

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r8 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: java.lang.String[] readNameList()>();

        $r3.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] compression_algorithms_server_to_client> = $r8;

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r8 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: java.lang.String[] readNameList()>();

        $r3.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] languages_client_to_server> = $r8;

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r8 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: java.lang.String[] readNameList()>();

        $r3.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] languages_server_to_client> = $r8;

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $z0 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: boolean readBoolean()>();

        $r3.<com.trilead.ssh2.transport.KexParameters: boolean first_kex_packet_follows> = $z0;

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $i1 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: int readUINT32()>();

        $r3.<com.trilead.ssh2.transport.KexParameters: int reserved_field1> = $i1;

        $i1 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: int remain()>();

        if $i1 == 0 goto label2;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Padding in KexInitPacket!");

        throw $r5;

     label2:
        return;
    }

    public com.trilead.ssh2.transport.KexParameters getKexParameters()
    {
        com.trilead.ssh2.packets.PacketKexInit $r0;
        com.trilead.ssh2.transport.KexParameters $r1;

        $r0 := @this: com.trilead.ssh2.packets.PacketKexInit;

        $r1 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        return $r1;
    }

    public byte[] getPayload()
    {
        com.trilead.ssh2.packets.PacketKexInit $r0;
        com.trilead.ssh2.packets.TypesWriter $r1;
        byte[] $r2;
        com.trilead.ssh2.transport.KexParameters $r3;
        java.lang.String[] $r4;
        boolean $z0;
        int $i0;

        $r0 := @this: com.trilead.ssh2.packets.PacketKexInit;

        $r2 = $r0.<com.trilead.ssh2.packets.PacketKexInit: byte[] payload>;

        if $r2 != null goto label1;

        $r1 = new com.trilead.ssh2.packets.TypesWriter;

        specialinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void <init>()>();

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeByte(int)>(20);

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r2 = $r3.<com.trilead.ssh2.transport.KexParameters: byte[] cookie>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeBytes(byte[],int,int)>($r2, 0, 16);

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r4 = $r3.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] kex_algorithms>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeNameList(java.lang.String[])>($r4);

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r4 = $r3.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] server_host_key_algorithms>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeNameList(java.lang.String[])>($r4);

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r4 = $r3.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] encryption_algorithms_client_to_server>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeNameList(java.lang.String[])>($r4);

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r4 = $r3.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] encryption_algorithms_server_to_client>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeNameList(java.lang.String[])>($r4);

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r4 = $r3.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] mac_algorithms_client_to_server>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeNameList(java.lang.String[])>($r4);

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r4 = $r3.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] mac_algorithms_server_to_client>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeNameList(java.lang.String[])>($r4);

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r4 = $r3.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] compression_algorithms_client_to_server>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeNameList(java.lang.String[])>($r4);

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r4 = $r3.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] compression_algorithms_server_to_client>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeNameList(java.lang.String[])>($r4);

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r4 = $r3.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] languages_client_to_server>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeNameList(java.lang.String[])>($r4);

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $r4 = $r3.<com.trilead.ssh2.transport.KexParameters: java.lang.String[] languages_server_to_client>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeNameList(java.lang.String[])>($r4);

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $z0 = $r3.<com.trilead.ssh2.transport.KexParameters: boolean first_kex_packet_follows>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeBoolean(boolean)>($z0);

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $i0 = $r3.<com.trilead.ssh2.transport.KexParameters: int reserved_field1>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeUINT32(int)>($i0);

        $r2 = virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: byte[] getBytes()>();

        $r0.<com.trilead.ssh2.packets.PacketKexInit: byte[] payload> = $r2;

     label1:
        $r2 = $r0.<com.trilead.ssh2.packets.PacketKexInit: byte[] payload>;

        return $r2;
    }

    public boolean isFirst_kex_packet_follows()
    {
        com.trilead.ssh2.packets.PacketKexInit $r0;
        com.trilead.ssh2.transport.KexParameters $r1;
        boolean $z0;

        $r0 := @this: com.trilead.ssh2.packets.PacketKexInit;

        $r1 = $r0.<com.trilead.ssh2.packets.PacketKexInit: com.trilead.ssh2.transport.KexParameters kp>;

        $z0 = $r1.<com.trilead.ssh2.transport.KexParameters: boolean first_kex_packet_follows>;

        return $z0;
    }
}
