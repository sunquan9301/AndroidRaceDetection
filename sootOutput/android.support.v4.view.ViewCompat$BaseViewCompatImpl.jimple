class android.support.v4.view.ViewCompat$BaseViewCompatImpl extends java.lang.Object implements android.support.v4.view.ViewCompat$ViewCompatImpl
{
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap;

    void <init>()
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<android.support.v4.view.ViewCompat$BaseViewCompatImpl: java.util.WeakHashMap mViewPropertyAnimatorCompatMap> = null;

        return;
    }

    private boolean canScrollingViewScrollHorizontally(android.support.v4.view.ScrollingView, int)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.support.v4.view.ScrollingView $r1;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.support.v4.view.ScrollingView;

        $i0 := @parameter1: int;

        $i2 = interfaceinvoke $r1.<android.support.v4.view.ScrollingView: int computeHorizontalScrollOffset()>();

        $i1 = interfaceinvoke $r1.<android.support.v4.view.ScrollingView: int computeHorizontalScrollRange()>();

        $i3 = interfaceinvoke $r1.<android.support.v4.view.ScrollingView: int computeHorizontalScrollExtent()>();

        $i1 = $i1 - $i3;

        if $i1 != 0 goto label1;

        return 0;

     label1:
        if $i0 >= 0 goto label2;

        if $i2 > 0 goto label3;

        return 0;

     label2:
        $i3 = $i1 + -1;

        if $i2 < $i3 goto label4;

        return 0;

     label3:
        return 1;

     label4:
        return 1;
    }

    private boolean canScrollingViewScrollVertically(android.support.v4.view.ScrollingView, int)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.support.v4.view.ScrollingView $r1;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.support.v4.view.ScrollingView;

        $i0 := @parameter1: int;

        $i2 = interfaceinvoke $r1.<android.support.v4.view.ScrollingView: int computeVerticalScrollOffset()>();

        $i1 = interfaceinvoke $r1.<android.support.v4.view.ScrollingView: int computeVerticalScrollRange()>();

        $i3 = interfaceinvoke $r1.<android.support.v4.view.ScrollingView: int computeVerticalScrollExtent()>();

        $i1 = $i1 - $i3;

        if $i1 != 0 goto label1;

        return 0;

     label1:
        if $i0 >= 0 goto label2;

        if $i2 > 0 goto label3;

        return 0;

     label2:
        $i3 = $i1 + -1;

        if $i2 < $i3 goto label4;

        return 0;

     label3:
        return 1;

     label4:
        return 1;
    }

    public boolean canScrollHorizontally(android.view.View, int)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;
        int $i0;
        boolean $z0;
        android.support.v4.view.ScrollingView $r2;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $z0 = $r1 instanceof android.support.v4.view.ScrollingView;

        if $z0 == 0 goto label1;

        $r2 = (android.support.v4.view.ScrollingView) $r1;

        $z0 = specialinvoke $r0.<android.support.v4.view.ViewCompat$BaseViewCompatImpl: boolean canScrollingViewScrollHorizontally(android.support.v4.view.ScrollingView,int)>($r2, $i0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean canScrollVertically(android.view.View, int)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;
        int $i0;
        boolean $z0;
        android.support.v4.view.ScrollingView $r2;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $z0 = $r1 instanceof android.support.v4.view.ScrollingView;

        if $z0 == 0 goto label1;

        $r2 = (android.support.v4.view.ScrollingView) $r1;

        $z0 = specialinvoke $r0.<android.support.v4.view.ViewCompat$BaseViewCompatImpl: boolean canScrollingViewScrollVertically(android.support.v4.view.ScrollingView,int)>($r2, $i0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean getFitsSystemWindows(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        return 0;
    }

    long getFrameTime()
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        return 10L;
    }

    public int getImportantForAccessibility(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        return 0;
    }

    public int getLayerType(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        return 0;
    }

    public int getLayoutDirection(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        return 0;
    }

    public int getOverScrollMode(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        return 2;
    }

    public android.view.ViewParent getParentForAccessibility(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;
        android.view.ViewParent $r2;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        return $r2;
    }

    public float getScaleX(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        return 0.0F;
    }

    public boolean isOpaque(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getOpacity()>();

        if $i0 != -1 goto label2;

        return 1;

     label1:
        return 0;

     label2:
        return 0;
    }

    public void postInvalidateOnAnimation(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        virtualinvoke $r1.<android.view.View: void invalidate()>();

        return;
    }

    public void postInvalidateOnAnimation(android.view.View, int, int, int, int)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        virtualinvoke $r1.<android.view.View: void invalidate(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    public void postOnAnimation(android.view.View, java.lang.Runnable)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;
        java.lang.Runnable $r2;
        long $l0;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: java.lang.Runnable;

        $l0 = virtualinvoke $r0.<android.support.v4.view.ViewCompat$BaseViewCompatImpl: long getFrameTime()>();

        virtualinvoke $r1.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>($r2, $l0);

        return;
    }

    public void setAccessibilityDelegate(android.view.View, android.support.v4.view.AccessibilityDelegateCompat)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;
        android.support.v4.view.AccessibilityDelegateCompat $r2;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.support.v4.view.AccessibilityDelegateCompat;

        return;
    }

    public void setChildrenDrawingOrderEnabled(android.view.ViewGroup, boolean)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.ViewGroup $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.ViewGroup;

        $z0 := @parameter1: boolean;

        return;
    }

    public void setElevation(android.view.View, float)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;
        float $f0;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        return;
    }

    public void setImportantForAccessibility(android.view.View, int)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;
        int $i0;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        return;
    }

    public void setLayerPaint(android.view.View, android.graphics.Paint)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;
        android.graphics.Paint $r2;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Paint;

        return;
    }

    public void setLayerType(android.view.View, int, android.graphics.Paint)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;
        int $i0;
        android.graphics.Paint $r2;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.graphics.Paint;

        return;
    }

    public void setSaveFromParentEnabled(android.view.View, boolean)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        return;
    }

    public void setScaleX(android.view.View, float)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;
        float $f0;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        return;
    }

    public void setScaleY(android.view.View, float)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;
        float $f0;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        return;
    }

    public void stopNestedScroll(android.view.View)
    {
        android.support.v4.view.ViewCompat$BaseViewCompatImpl $r0;
        android.view.View $r1;
        boolean $z0;
        android.support.v4.view.NestedScrollingChild $r2;

        $r0 := @this: android.support.v4.view.ViewCompat$BaseViewCompatImpl;

        $r1 := @parameter0: android.view.View;

        $z0 = $r1 instanceof android.support.v4.view.NestedScrollingChild;

        if $z0 == 0 goto label1;

        $r2 = (android.support.v4.view.NestedScrollingChild) $r1;

        interfaceinvoke $r2.<android.support.v4.view.NestedScrollingChild: void stopNestedScroll()>();

        return;

     label1:
        return;
    }
}
