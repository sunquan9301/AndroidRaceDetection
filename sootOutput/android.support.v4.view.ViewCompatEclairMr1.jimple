class android.support.v4.view.ViewCompatEclairMr1 extends java.lang.Object
{
    private static java.lang.reflect.Method sChildrenDrawingOrderMethod;

    public static boolean isOpaque(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $z0 = virtualinvoke $r0.<android.view.View: boolean isOpaque()>();

        return $z0;
    }

    public static void setChildrenDrawingOrderEnabled(android.view.ViewGroup, boolean)
    {
        android.view.ViewGroup $r0;
        boolean $z0;
        java.lang.NoSuchMethodException $r1;
        java.lang.reflect.Method $r2;
        java.lang.Class $r3, $r4;
        java.lang.Class[] $r5;
        java.lang.Object[] $r6;
        java.lang.Boolean $r7;
        java.lang.IllegalAccessException $r8;
        java.lang.IllegalArgumentException $r9;
        java.lang.reflect.InvocationTargetException $r10;

        $r0 := @parameter0: android.view.ViewGroup;

        $z0 := @parameter1: boolean;

        $r2 = <android.support.v4.view.ViewCompatEclairMr1: java.lang.reflect.Method sChildrenDrawingOrderMethod>;

        if $r2 != null goto label04;

        $r4 = class "android/view/ViewGroup";

        $r5 = newarray (java.lang.Class)[1];

        $r3 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r5[0] = $r3;

     label01:
        $r2 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setChildrenDrawingOrderEnabled", $r5);

     label02:
        <android.support.v4.view.ViewCompatEclairMr1: java.lang.reflect.Method sChildrenDrawingOrderMethod> = $r2;

     label03:
        $r2 = <android.support.v4.view.ViewCompatEclairMr1: java.lang.reflect.Method sChildrenDrawingOrderMethod>;

        virtualinvoke $r2.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label04:
        $r2 = <android.support.v4.view.ViewCompatEclairMr1: java.lang.reflect.Method sChildrenDrawingOrderMethod>;

        $r6 = newarray (java.lang.Object)[1];

     label05:
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r6[0] = $r7;

        virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r6);

     label06:
        return;

     label07:
        $r1 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewCompat", "Unable to find childrenDrawingOrderEnabled", $r1);

        goto label03;

     label08:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewCompat", "Unable to invoke childrenDrawingOrderEnabled", $r8);

        return;

     label09:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewCompat", "Unable to invoke childrenDrawingOrderEnabled", $r9);

        return;

     label10:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewCompat", "Unable to invoke childrenDrawingOrderEnabled", $r10);

        return;

        catch java.lang.NoSuchMethodException from label01 to label02 with label07;
        catch java.lang.IllegalAccessException from label05 to label06 with label08;
        catch java.lang.IllegalArgumentException from label05 to label06 with label09;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label10;
    }
}
