public class com.trilead.ssh2.packets.PacketKexDhGexRequest extends java.lang.Object
{
    int max;
    int min;
    int n;
    byte[] payload;

    public void <init>(com.trilead.ssh2.DHGexParameters)
    {
        com.trilead.ssh2.packets.PacketKexDhGexRequest $r0;
        com.trilead.ssh2.DHGexParameters $r1;
        int $i0;

        $r0 := @this: com.trilead.ssh2.packets.PacketKexDhGexRequest;

        $r1 := @parameter0: com.trilead.ssh2.DHGexParameters;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke $r1.<com.trilead.ssh2.DHGexParameters: int getMin_group_len()>();

        $r0.<com.trilead.ssh2.packets.PacketKexDhGexRequest: int min> = $i0;

        $i0 = virtualinvoke $r1.<com.trilead.ssh2.DHGexParameters: int getPref_group_len()>();

        $r0.<com.trilead.ssh2.packets.PacketKexDhGexRequest: int n> = $i0;

        $i0 = virtualinvoke $r1.<com.trilead.ssh2.DHGexParameters: int getMax_group_len()>();

        $r0.<com.trilead.ssh2.packets.PacketKexDhGexRequest: int max> = $i0;

        return;
    }

    public byte[] getPayload()
    {
        com.trilead.ssh2.packets.PacketKexDhGexRequest $r0;
        com.trilead.ssh2.packets.TypesWriter $r1;
        byte[] $r2;
        int $i0;

        $r0 := @this: com.trilead.ssh2.packets.PacketKexDhGexRequest;

        $r2 = $r0.<com.trilead.ssh2.packets.PacketKexDhGexRequest: byte[] payload>;

        if $r2 != null goto label1;

        $r1 = new com.trilead.ssh2.packets.TypesWriter;

        specialinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void <init>()>();

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeByte(int)>(34);

        $i0 = $r0.<com.trilead.ssh2.packets.PacketKexDhGexRequest: int min>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeUINT32(int)>($i0);

        $i0 = $r0.<com.trilead.ssh2.packets.PacketKexDhGexRequest: int n>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeUINT32(int)>($i0);

        $i0 = $r0.<com.trilead.ssh2.packets.PacketKexDhGexRequest: int max>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeUINT32(int)>($i0);

        $r2 = virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: byte[] getBytes()>();

        $r0.<com.trilead.ssh2.packets.PacketKexDhGexRequest: byte[] payload> = $r2;

     label1:
        $r2 = $r0.<com.trilead.ssh2.packets.PacketKexDhGexRequest: byte[] payload>;

        return $r2;
    }
}
