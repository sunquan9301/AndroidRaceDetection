public final class com.trilead.ssh2.channel.ChannelInputStream extends java.io.InputStream
{
    com.trilead.ssh2.channel.Channel c;
    boolean extendedFlag;
    boolean isClosed;
    boolean isEOF;

    void <init>(com.trilead.ssh2.channel.Channel, boolean)
    {
        com.trilead.ssh2.channel.ChannelInputStream $r0;
        com.trilead.ssh2.channel.Channel $r1;
        boolean $z0;

        $r0 := @this: com.trilead.ssh2.channel.ChannelInputStream;

        $r1 := @parameter0: com.trilead.ssh2.channel.Channel;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<java.io.InputStream: void <init>()>();

        $r0.<com.trilead.ssh2.channel.ChannelInputStream: boolean isClosed> = 0;

        $r0.<com.trilead.ssh2.channel.ChannelInputStream: boolean isEOF> = 0;

        $r0.<com.trilead.ssh2.channel.ChannelInputStream: boolean extendedFlag> = 0;

        $r0.<com.trilead.ssh2.channel.ChannelInputStream: com.trilead.ssh2.channel.Channel c> = $r1;

        $r0.<com.trilead.ssh2.channel.ChannelInputStream: boolean extendedFlag> = $z0;

        return;
    }

    public int available() throws java.io.IOException
    {
        com.trilead.ssh2.channel.ChannelInputStream $r0;
        int $i0, $i1;
        boolean $z0;
        com.trilead.ssh2.channel.Channel $r1;
        com.trilead.ssh2.channel.ChannelManager $r2;

        $r0 := @this: com.trilead.ssh2.channel.ChannelInputStream;

        $z0 = $r0.<com.trilead.ssh2.channel.ChannelInputStream: boolean isEOF>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = $r0.<com.trilead.ssh2.channel.ChannelInputStream: com.trilead.ssh2.channel.Channel c>;

        $r2 = $r1.<com.trilead.ssh2.channel.Channel: com.trilead.ssh2.channel.ChannelManager cm>;

        $r1 = $r0.<com.trilead.ssh2.channel.ChannelInputStream: com.trilead.ssh2.channel.Channel c>;

        $z0 = $r0.<com.trilead.ssh2.channel.ChannelInputStream: boolean extendedFlag>;

        $i1 = virtualinvoke $r2.<com.trilead.ssh2.channel.ChannelManager: int getAvailable(com.trilead.ssh2.channel.Channel,boolean)>($r1, $z0);

        $i0 = $i1;

        if $i1 <= 0 goto label3;

     label2:
        return $i0;

     label3:
        $i0 = 0;

        goto label2;
    }

    public void close() throws java.io.IOException
    {
        com.trilead.ssh2.channel.ChannelInputStream $r0;

        $r0 := @this: com.trilead.ssh2.channel.ChannelInputStream;

        $r0.<com.trilead.ssh2.channel.ChannelInputStream: boolean isClosed> = 1;

        return;
    }

    public int read() throws java.io.IOException
    {
        com.trilead.ssh2.channel.ChannelInputStream $r0;
        byte[] $r1;
        int $i0;
        short $s1;
        byte $b2;

        $r0 := @this: com.trilead.ssh2.channel.ChannelInputStream;

        $r1 = newarray (byte)[1];

        $i0 = virtualinvoke $r0.<com.trilead.ssh2.channel.ChannelInputStream: int read(byte[],int,int)>($r1, 0, 1);

        if $i0 == 1 goto label1;

        return -1;

     label1:
        $b2 = $r1[0];

        $s1 = $b2 & 255;

        return $s1;
    }

    public int read(byte[]) throws java.io.IOException
    {
        com.trilead.ssh2.channel.ChannelInputStream $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: com.trilead.ssh2.channel.ChannelInputStream;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        $i0 = virtualinvoke $r0.<com.trilead.ssh2.channel.ChannelInputStream: int read(byte[],int,int)>($r1, 0, $i0);

        return $i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        com.trilead.ssh2.channel.ChannelInputStream $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.NullPointerException $r2;
        boolean $z0;
        java.lang.IndexOutOfBoundsException $r3;
        com.trilead.ssh2.channel.Channel $r4;
        com.trilead.ssh2.channel.ChannelManager $r5;

        $r0 := @this: com.trilead.ssh2.channel.ChannelInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        if $i0 < 0 goto label2;

        if $i1 < 0 goto label2;

        $i3 = $i0 + $i1;

        $i2 = lengthof $r1;

        if $i3 > $i2 goto label2;

        $i3 = $i0 + $i1;

        if $i3 < 0 goto label2;

        $i3 = lengthof $r1;

        if $i0 <= $i3 goto label3;

     label2:
        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label3:
        if $i1 != 0 goto label4;

        return 0;

     label4:
        $z0 = $r0.<com.trilead.ssh2.channel.ChannelInputStream: boolean isEOF>;

        if $z0 == 0 goto label5;

        return -1;

     label5:
        $r4 = $r0.<com.trilead.ssh2.channel.ChannelInputStream: com.trilead.ssh2.channel.Channel c>;

        $r5 = $r4.<com.trilead.ssh2.channel.Channel: com.trilead.ssh2.channel.ChannelManager cm>;

        $r4 = $r0.<com.trilead.ssh2.channel.ChannelInputStream: com.trilead.ssh2.channel.Channel c>;

        $z0 = $r0.<com.trilead.ssh2.channel.ChannelInputStream: boolean extendedFlag>;

        $i2 = virtualinvoke $r5.<com.trilead.ssh2.channel.ChannelManager: int getChannelData(com.trilead.ssh2.channel.Channel,boolean,byte[],int,int)>($r4, $z0, $r1, $i0, $i1);

        if $i2 != -1 goto label6;

        $r0.<com.trilead.ssh2.channel.ChannelInputStream: boolean isEOF> = 1;

        return $i2;

     label6:
        return $i2;
    }
}
