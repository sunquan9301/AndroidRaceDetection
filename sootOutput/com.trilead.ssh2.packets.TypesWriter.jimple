public class com.trilead.ssh2.packets.TypesWriter extends java.lang.Object
{
    byte[] arr;
    int pos;

    public void <init>()
    {
        com.trilead.ssh2.packets.TypesWriter $r0;
        byte[] $r1;

        $r0 := @this: com.trilead.ssh2.packets.TypesWriter;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[256];

        $r0.<com.trilead.ssh2.packets.TypesWriter: byte[] arr> = $r1;

        $r0.<com.trilead.ssh2.packets.TypesWriter: int pos> = 0;

        return;
    }

    private void resize(int)
    {
        com.trilead.ssh2.packets.TypesWriter $r0;
        int $i0;
        byte[] $r1, $r2, $r3;

        $r0 := @this: com.trilead.ssh2.packets.TypesWriter;

        $i0 := @parameter0: int;

        $r1 = newarray (byte)[$i0];

        $r2 = $r0.<com.trilead.ssh2.packets.TypesWriter: byte[] arr>;

        $r3 = $r0.<com.trilead.ssh2.packets.TypesWriter: byte[] arr>;

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        $r0.<com.trilead.ssh2.packets.TypesWriter: byte[] arr> = $r1;

        return;
    }

    public byte[] getBytes()
    {
        com.trilead.ssh2.packets.TypesWriter $r0;
        byte[] $r1, $r2;
        int $i0;

        $r0 := @this: com.trilead.ssh2.packets.TypesWriter;

        $i0 = $r0.<com.trilead.ssh2.packets.TypesWriter: int pos>;

        $r1 = newarray (byte)[$i0];

        $r2 = $r0.<com.trilead.ssh2.packets.TypesWriter: byte[] arr>;

        $i0 = $r0.<com.trilead.ssh2.packets.TypesWriter: int pos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        return $r1;
    }

    public void writeBoolean(boolean)
    {
        com.trilead.ssh2.packets.TypesWriter $r0;
        boolean $z0;
        int $i0, $i1;
        byte[] $r1;
        byte $b2;

        $r0 := @this: com.trilead.ssh2.packets.TypesWriter;

        $z0 := @parameter0: boolean;

        $i0 = $r0.<com.trilead.ssh2.packets.TypesWriter: int pos>;

        $i0 = $i0 + 1;

        $r1 = $r0.<com.trilead.ssh2.packets.TypesWriter: byte[] arr>;

        $i1 = lengthof $r1;

        if $i0 <= $i1 goto label1;

        $r1 = $r0.<com.trilead.ssh2.packets.TypesWriter: byte[] arr>;

        $i1 = lengthof $r1;

        $i1 = $i1 + 32;

        specialinvoke $r0.<com.trilead.ssh2.packets.TypesWriter: void resize(int)>($i1);

     label1:
        $r1 = $r0.<com.trilead.ssh2.packets.TypesWriter: byte[] arr>;

        $i0 = $r0.<com.trilead.ssh2.packets.TypesWriter: int pos>;

        $i1 = $i0 + 1;

        $r0.<com.trilead.ssh2.packets.TypesWriter: int pos> = $i1;

        if $z0 == 0 goto label3;

        $b2 = 1;

     label2:
        $r1[$i0] = $b2;

        return;

     label3:
        $b2 = 0;

        goto label2;
    }

    public void writeByte(int)
    {
        com.trilead.ssh2.packets.TypesWriter $r0;
        int $i0, $i1;

        $r0 := @this: com.trilead.ssh2.packets.TypesWriter;

        $i0 := @parameter0: int;

        $i1 = $r0.<com.trilead.ssh2.packets.TypesWriter: int pos>;

        virtualinvoke $r0.<com.trilead.ssh2.packets.TypesWriter: void writeByte(int,int)>($i0, $i1);

        $i1 = $r0.<com.trilead.ssh2.packets.TypesWriter: int pos>;

        $i1 = $i1 + 1;

        $r0.<com.trilead.ssh2.packets.TypesWriter: int pos> = $i1;

        return;
    }

    public void writeByte(int, int)
    {
        com.trilead.ssh2.packets.TypesWriter $r0;
        int $i0, $i1, $i2, $i3;
        byte[] $r1;
        byte $b4;

        $r0 := @this: com.trilead.ssh2.packets.TypesWriter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $i1 + 1;

        $r1 = $r0.<com.trilead.ssh2.packets.TypesWriter: byte[] arr>;

        $i3 = lengthof $r1;

        if $i2 <= $i3 goto label1;

        $i3 = $i1 + 32;

        specialinvoke $r0.<com.trilead.ssh2.packets.TypesWriter: void resize(int)>($i3);

     label1:
        $r1 = $r0.<com.trilead.ssh2.packets.TypesWriter: byte[] arr>;

        $b4 = (byte) $i0;

        $r1[$i1] = $b4;

        return;
    }

    public void writeBytes(byte[])
    {
        com.trilead.ssh2.packets.TypesWriter $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: com.trilead.ssh2.packets.TypesWriter;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        virtualinvoke $r0.<com.trilead.ssh2.packets.TypesWriter: void writeBytes(byte[],int,int)>($r1, 0, $i0);

        return;
    }

    public void writeBytes(byte[], int, int)
    {
        com.trilead.ssh2.packets.TypesWriter $r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: com.trilead.ssh2.packets.TypesWriter;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = $r0.<com.trilead.ssh2.packets.TypesWriter: int pos>;

        $i2 = $i2 + $i1;

        $r2 = $r0.<com.trilead.ssh2.packets.TypesWriter: byte[] arr>;

        $i3 = lengthof $r2;

        if $i2 <= $i3 goto label1;

        $r2 = $r0.<com.trilead.ssh2.packets.TypesWriter: byte[] arr>;

        $i3 = lengthof $r2;

        $i3 = $i3 + $i1;

        $i3 = $i3 + 32;

        specialinvoke $r0.<com.trilead.ssh2.packets.TypesWriter: void resize(int)>($i3);

     label1:
        $r2 = $r0.<com.trilead.ssh2.packets.TypesWriter: byte[] arr>;

        $i3 = $r0.<com.trilead.ssh2.packets.TypesWriter: int pos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, $i3, $i1);

        $i3 = $r0.<com.trilead.ssh2.packets.TypesWriter: int pos>;

        $i3 = $i3 + $i1;

        $r0.<com.trilead.ssh2.packets.TypesWriter: int pos> = $i3;

        return;
    }

    public void writeMPInt(java.math.BigInteger)
    {
        com.trilead.ssh2.packets.TypesWriter $r0;
        java.math.BigInteger $r1;
        int $i0;
        byte[] $r2;
        byte $b1;

        $r0 := @this: com.trilead.ssh2.packets.TypesWriter;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 = virtualinvoke $r1.<java.math.BigInteger: byte[] toByteArray()>();

        $i0 = lengthof $r2;

        if $i0 != 1 goto label1;

        $b1 = $r2[0];

        if $b1 != 0 goto label1;

        virtualinvoke $r0.<com.trilead.ssh2.packets.TypesWriter: void writeUINT32(int)>(0);

        return;

     label1:
        $i0 = lengthof $r2;

        virtualinvoke $r0.<com.trilead.ssh2.packets.TypesWriter: void writeString(byte[],int,int)>($r2, 0, $i0);

        return;
    }

    public void writeNameList(java.lang.String[])
    {
        com.trilead.ssh2.packets.TypesWriter $r0;
        java.lang.String[] $r1;
        int $i0, $i1;
        java.lang.StringBuffer $r2;
        java.lang.String $r3;

        $r0 := @this: com.trilead.ssh2.packets.TypesWriter;

        $r1 := @parameter0: java.lang.String[];

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label3;

        if $i0 <= 0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label2:
        $r3 = $r1[$i0];

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<com.trilead.ssh2.packets.TypesWriter: void writeString(java.lang.String)>($r3);

        return;
    }

    public void writeString(java.lang.String)
    {
        com.trilead.ssh2.packets.TypesWriter $r0;
        java.lang.String $r1;
        byte[] $r2;
        java.io.UnsupportedEncodingException $r3;
        int $i0;

        $r0 := @this: com.trilead.ssh2.packets.TypesWriter;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

     label2:
        $i0 = lengthof $r2;

        virtualinvoke $r0.<com.trilead.ssh2.packets.TypesWriter: void writeUINT32(int)>($i0);

        $i0 = lengthof $r2;

        virtualinvoke $r0.<com.trilead.ssh2.packets.TypesWriter: void writeBytes(byte[],int,int)>($r2, 0, $i0);

        return;

     label3:
        $r3 := @caughtexception;

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        goto label2;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public void writeString(byte[], int, int)
    {
        com.trilead.ssh2.packets.TypesWriter $r0;
        byte[] $r1;
        int $i0, $i1;

        $r0 := @this: com.trilead.ssh2.packets.TypesWriter;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke $r0.<com.trilead.ssh2.packets.TypesWriter: void writeUINT32(int)>($i1);

        virtualinvoke $r0.<com.trilead.ssh2.packets.TypesWriter: void writeBytes(byte[],int,int)>($r1, $i0, $i1);

        return;
    }

    public void writeUINT32(int)
    {
        com.trilead.ssh2.packets.TypesWriter $r0;
        int $i0, $i1;

        $r0 := @this: com.trilead.ssh2.packets.TypesWriter;

        $i0 := @parameter0: int;

        $i1 = $r0.<com.trilead.ssh2.packets.TypesWriter: int pos>;

        virtualinvoke $r0.<com.trilead.ssh2.packets.TypesWriter: void writeUINT32(int,int)>($i0, $i1);

        $i1 = $r0.<com.trilead.ssh2.packets.TypesWriter: int pos>;

        $i1 = $i1 + 4;

        $r0.<com.trilead.ssh2.packets.TypesWriter: int pos> = $i1;

        return;
    }

    public void writeUINT32(int, int)
    {
        com.trilead.ssh2.packets.TypesWriter $r0;
        int $i0, $i1, $i2, $i3;
        byte[] $r1;
        byte $b4;

        $r0 := @this: com.trilead.ssh2.packets.TypesWriter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $i1 + 4;

        $r1 = $r0.<com.trilead.ssh2.packets.TypesWriter: byte[] arr>;

        $i3 = lengthof $r1;

        if $i2 <= $i3 goto label1;

        $i3 = $i1 + 32;

        specialinvoke $r0.<com.trilead.ssh2.packets.TypesWriter: void resize(int)>($i3);

     label1:
        $r1 = $r0.<com.trilead.ssh2.packets.TypesWriter: byte[] arr>;

        $i2 = $i1 + 1;

        $i3 = $i0 >> 24;

        $b4 = (byte) $i3;

        $r1[$i1] = $b4;

        $r1 = $r0.<com.trilead.ssh2.packets.TypesWriter: byte[] arr>;

        $i3 = $i2 + 1;

        $i1 = $i0 >> 16;

        $b4 = (byte) $i1;

        $r1[$i2] = $b4;

        $r1 = $r0.<com.trilead.ssh2.packets.TypesWriter: byte[] arr>;

        $i2 = $i3 + 1;

        $i1 = $i0 >> 8;

        $b4 = (byte) $i1;

        $r1[$i3] = $b4;

        $r1 = $r0.<com.trilead.ssh2.packets.TypesWriter: byte[] arr>;

        $b4 = (byte) $i0;

        $r1[$i2] = $b4;

        return;
    }
}
