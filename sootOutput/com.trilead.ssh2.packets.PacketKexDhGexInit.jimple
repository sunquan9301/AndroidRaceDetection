public class com.trilead.ssh2.packets.PacketKexDhGexInit extends java.lang.Object
{
    java.math.BigInteger e;
    byte[] payload;

    public void <init>(java.math.BigInteger)
    {
        com.trilead.ssh2.packets.PacketKexDhGexInit $r0;
        java.math.BigInteger $r1;

        $r0 := @this: com.trilead.ssh2.packets.PacketKexDhGexInit;

        $r1 := @parameter0: java.math.BigInteger;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.trilead.ssh2.packets.PacketKexDhGexInit: java.math.BigInteger e> = $r1;

        return;
    }

    public byte[] getPayload()
    {
        com.trilead.ssh2.packets.PacketKexDhGexInit $r0;
        com.trilead.ssh2.packets.TypesWriter $r1;
        byte[] $r2;
        java.math.BigInteger $r3;

        $r0 := @this: com.trilead.ssh2.packets.PacketKexDhGexInit;

        $r2 = $r0.<com.trilead.ssh2.packets.PacketKexDhGexInit: byte[] payload>;

        if $r2 != null goto label1;

        $r1 = new com.trilead.ssh2.packets.TypesWriter;

        specialinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void <init>()>();

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeByte(int)>(32);

        $r3 = $r0.<com.trilead.ssh2.packets.PacketKexDhGexInit: java.math.BigInteger e>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeMPInt(java.math.BigInteger)>($r3);

        $r2 = virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: byte[] getBytes()>();

        $r0.<com.trilead.ssh2.packets.PacketKexDhGexInit: byte[] payload> = $r2;

     label1:
        $r2 = $r0.<com.trilead.ssh2.packets.PacketKexDhGexInit: byte[] payload>;

        return $r2;
    }
}
