public class com.trilead.ssh2.transport.ClientServerHello extends java.lang.Object
{
    java.lang.String client_line;
    java.lang.String server_line;
    java.lang.String server_versioncomment;

    public void <init>(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        com.trilead.ssh2.transport.ClientServerHello $r0;
        java.io.InputStream $r1;
        java.io.OutputStream $r2;
        int $i0, $i1;
        byte[] $r3;
        java.lang.String $r4;
        java.lang.StringBuilder $r5;
        boolean $z0;
        java.io.IOException $r6;

        $r0 := @this: com.trilead.ssh2.transport.ClientServerHello;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.io.OutputStream;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.trilead.ssh2.transport.ClientServerHello: java.lang.String client_line> = "SSH-2.0-TrileadSSH2Java_213";

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r4 = $r0.<com.trilead.ssh2.transport.ClientServerHello: java.lang.String client_line>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r3);

        virtualinvoke $r2.<java.io.OutputStream: void flush()>();

        $r3 = newarray (byte)[512];

        $i0 = 0;

     label1:
        if $i0 >= 50 goto label2;

        $i1 = staticinvoke <com.trilead.ssh2.transport.ClientServerHello: int readLineRN(java.io.InputStream,byte[])>($r1, $r3);

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r3, 0, $i1, "ISO-8859-1");

        $r0.<com.trilead.ssh2.transport.ClientServerHello: java.lang.String server_line> = $r4;

        $r4 = $r0.<com.trilead.ssh2.transport.ClientServerHello: java.lang.String server_line>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("SSH-");

        if $z0 == 0 goto label3;

     label2:
        $r4 = $r0.<com.trilead.ssh2.transport.ClientServerHello: java.lang.String server_line>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("SSH-");

        if $z0 != 0 goto label4;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Malformed server identification string. There was no line starting with \'SSH-\' amongst the first 50 lines.");

        throw $r6;

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        $r4 = $r0.<com.trilead.ssh2.transport.ClientServerHello: java.lang.String server_line>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("SSH-1.99-");

        if $z0 == 0 goto label5;

        $r4 = $r0.<com.trilead.ssh2.transport.ClientServerHello: java.lang.String server_line>;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>(9);

        $r0.<com.trilead.ssh2.transport.ClientServerHello: java.lang.String server_versioncomment> = $r4;

        return;

     label5:
        $r4 = $r0.<com.trilead.ssh2.transport.ClientServerHello: java.lang.String server_line>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("SSH-2.0-");

        if $z0 == 0 goto label6;

        $r4 = $r0.<com.trilead.ssh2.transport.ClientServerHello: java.lang.String server_line>;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>(8);

        $r0.<com.trilead.ssh2.transport.ClientServerHello: java.lang.String server_versioncomment> = $r4;

        return;

     label6:
        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Server uses incompatible protocol, it is not SSH-2 compatible.");

        throw $r6;
    }

    public static final int readLineRN(java.io.InputStream, byte[]) throws java.io.IOException
    {
        java.io.InputStream $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.io.IOException $r2;
        byte $b4;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: byte[];

        $i1 = 0;

        $z0 = 0;

        $i0 = 0;

     label1:
        $i3 = virtualinvoke $r0.<java.io.InputStream: int read()>();

        if $i3 != -1 goto label2;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Premature connection close");

        throw $r2;

     label2:
        $i2 = $i1 + 1;

        $b4 = (byte) $i3;

        $r1[$i1] = $b4;

        if $i3 != 13 goto label3;

        $z0 = 1;

        $i1 = $i2;

        goto label1;

     label3:
        if $i3 != 10 goto label4;

        return $i0;

     label4:
        if $z0 != 1 goto label5;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Malformed line sent by the server, the line does not end correctly.");

        throw $r2;

     label5:
        $i0 = $i0 + 1;

        $i3 = lengthof $r1;

        if $i2 < $i3 goto label6;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("The server sent a too long line.");

        throw $r2;

     label6:
        $i1 = $i2;

        goto label1;
    }

    public byte[] getClientString()
    {
        com.trilead.ssh2.transport.ClientServerHello $r0;
        java.io.UnsupportedEncodingException $r1;
        java.lang.String $r2;
        byte[] $r3;

        $r0 := @this: com.trilead.ssh2.transport.ClientServerHello;

        $r2 = $r0.<com.trilead.ssh2.transport.ClientServerHello: java.lang.String client_line>;

     label1:
        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

     label2:
        return $r3;

     label3:
        $r1 := @caughtexception;

        $r2 = $r0.<com.trilead.ssh2.transport.ClientServerHello: java.lang.String client_line>;

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        return $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public byte[] getServerString()
    {
        com.trilead.ssh2.transport.ClientServerHello $r0;
        java.io.UnsupportedEncodingException $r1;
        java.lang.String $r2;
        byte[] $r3;

        $r0 := @this: com.trilead.ssh2.transport.ClientServerHello;

        $r2 = $r0.<com.trilead.ssh2.transport.ClientServerHello: java.lang.String server_line>;

     label1:
        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

     label2:
        return $r3;

     label3:
        $r1 := @caughtexception;

        $r2 = $r0.<com.trilead.ssh2.transport.ClientServerHello: java.lang.String server_line>;

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        return $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
}
