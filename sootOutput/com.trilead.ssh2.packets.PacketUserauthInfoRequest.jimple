public class com.trilead.ssh2.packets.PacketUserauthInfoRequest extends java.lang.Object
{
    boolean[] echo;
    java.lang.String instruction;
    java.lang.String languageTag;
    java.lang.String name;
    int numPrompts;
    byte[] payload;
    java.lang.String[] prompt;

    public void <init>(byte[], int, int) throws java.io.IOException
    {
        com.trilead.ssh2.packets.PacketUserauthInfoRequest $r0;
        byte[] $r1, $r3;
        int $i0, $i1;
        com.trilead.ssh2.packets.TypesReader $r2;
        java.io.IOException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.lang.String[] $r7;
        boolean[] $r8;
        boolean $z0;

        $r0 := @this: com.trilead.ssh2.packets.PacketUserauthInfoRequest;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = newarray (byte)[$i1];

        $r0.<com.trilead.ssh2.packets.PacketUserauthInfoRequest: byte[] payload> = $r3;

        $r3 = $r0.<com.trilead.ssh2.packets.PacketUserauthInfoRequest: byte[] payload>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r3, 0, $i1);

        $r2 = new com.trilead.ssh2.packets.TypesReader;

        specialinvoke $r2.<com.trilead.ssh2.packets.TypesReader: void <init>(byte[],int,int)>($r1, $i0, $i1);

        $i1 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: int readByte()>();

        if $i1 == 60 goto label1;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This is not a SSH_MSG_USERAUTH_INFO_REQUEST! (");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label1:
        $r6 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: java.lang.String readString()>();

        $r0.<com.trilead.ssh2.packets.PacketUserauthInfoRequest: java.lang.String name> = $r6;

        $r6 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: java.lang.String readString()>();

        $r0.<com.trilead.ssh2.packets.PacketUserauthInfoRequest: java.lang.String instruction> = $r6;

        $r6 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: java.lang.String readString()>();

        $r0.<com.trilead.ssh2.packets.PacketUserauthInfoRequest: java.lang.String languageTag> = $r6;

        $i1 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: int readUINT32()>();

        $r0.<com.trilead.ssh2.packets.PacketUserauthInfoRequest: int numPrompts> = $i1;

        $i1 = $r0.<com.trilead.ssh2.packets.PacketUserauthInfoRequest: int numPrompts>;

        $r7 = newarray (java.lang.String)[$i1];

        $r0.<com.trilead.ssh2.packets.PacketUserauthInfoRequest: java.lang.String[] prompt> = $r7;

        $i1 = $r0.<com.trilead.ssh2.packets.PacketUserauthInfoRequest: int numPrompts>;

        $r8 = newarray (boolean)[$i1];

        $r0.<com.trilead.ssh2.packets.PacketUserauthInfoRequest: boolean[] echo> = $r8;

        $i1 = 0;

     label2:
        $i0 = $r0.<com.trilead.ssh2.packets.PacketUserauthInfoRequest: int numPrompts>;

        if $i1 >= $i0 goto label3;

        $r7 = $r0.<com.trilead.ssh2.packets.PacketUserauthInfoRequest: java.lang.String[] prompt>;

        $r6 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: java.lang.String readString()>();

        $r7[$i1] = $r6;

        $r8 = $r0.<com.trilead.ssh2.packets.PacketUserauthInfoRequest: boolean[] echo>;

        $z0 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: boolean readBoolean()>();

        $r8[$i1] = $z0;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $i1 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: int remain()>();

        if $i1 == 0 goto label4;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Padding in SSH_MSG_USERAUTH_INFO_REQUEST packet!");

        throw $r4;

     label4:
        return;
    }

    public boolean[] getEcho()
    {
        com.trilead.ssh2.packets.PacketUserauthInfoRequest $r0;
        boolean[] $r1;

        $r0 := @this: com.trilead.ssh2.packets.PacketUserauthInfoRequest;

        $r1 = $r0.<com.trilead.ssh2.packets.PacketUserauthInfoRequest: boolean[] echo>;

        return $r1;
    }

    public java.lang.String getInstruction()
    {
        com.trilead.ssh2.packets.PacketUserauthInfoRequest $r0;
        java.lang.String $r1;

        $r0 := @this: com.trilead.ssh2.packets.PacketUserauthInfoRequest;

        $r1 = $r0.<com.trilead.ssh2.packets.PacketUserauthInfoRequest: java.lang.String instruction>;

        return $r1;
    }

    public java.lang.String getName()
    {
        com.trilead.ssh2.packets.PacketUserauthInfoRequest $r0;
        java.lang.String $r1;

        $r0 := @this: com.trilead.ssh2.packets.PacketUserauthInfoRequest;

        $r1 = $r0.<com.trilead.ssh2.packets.PacketUserauthInfoRequest: java.lang.String name>;

        return $r1;
    }

    public int getNumPrompts()
    {
        com.trilead.ssh2.packets.PacketUserauthInfoRequest $r0;
        int $i0;

        $r0 := @this: com.trilead.ssh2.packets.PacketUserauthInfoRequest;

        $i0 = $r0.<com.trilead.ssh2.packets.PacketUserauthInfoRequest: int numPrompts>;

        return $i0;
    }

    public java.lang.String[] getPrompt()
    {
        com.trilead.ssh2.packets.PacketUserauthInfoRequest $r0;
        java.lang.String[] $r1;

        $r0 := @this: com.trilead.ssh2.packets.PacketUserauthInfoRequest;

        $r1 = $r0.<com.trilead.ssh2.packets.PacketUserauthInfoRequest: java.lang.String[] prompt>;

        return $r1;
    }
}
