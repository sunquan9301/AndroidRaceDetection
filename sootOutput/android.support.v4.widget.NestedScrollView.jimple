public class android.support.v4.widget.NestedScrollView extends android.widget.FrameLayout implements android.support.v4.view.NestedScrollingChild, android.support.v4.view.NestedScrollingParent
{
    private static final android.support.v4.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE;
    private static final int[] SCROLLVIEW_STYLEABLE;
    private int mActivePointerId;
    private final android.support.v4.view.NestedScrollingChildHelper mChildHelper;
    private android.view.View mChildToScrollTo;
    private android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom;
    private android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop;
    private boolean mFillViewport;
    private boolean mIsBeingDragged;
    private boolean mIsLaidOut;
    private boolean mIsLayoutDirty;
    private int mLastMotionY;
    private long mLastScroll;
    private int mMaximumVelocity;
    private int mMinimumVelocity;
    private int mNestedYOffset;
    private final android.support.v4.view.NestedScrollingParentHelper mParentHelper;
    private android.support.v4.widget.NestedScrollView$SavedState mSavedState;
    private final int[] mScrollConsumed;
    private final int[] mScrollOffset;
    private android.support.v4.widget.ScrollerCompat mScroller;
    private boolean mSmoothScrollingEnabled;
    private final android.graphics.Rect mTempRect;
    private int mTouchSlop;
    private android.view.VelocityTracker mVelocityTracker;
    private float mVerticalScrollFactor;

    static void <clinit>()
    {
        android.support.v4.widget.NestedScrollView$AccessibilityDelegate $r0;
        int[] $r1;

        $r0 = new android.support.v4.widget.NestedScrollView$AccessibilityDelegate;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView$AccessibilityDelegate: void <init>()>();

        <android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE> = $r0;

        $r1 = newarray (int)[1];

        $r1[0] = 16843130;

        <android.support.v4.widget.NestedScrollView: int[] SCROLLVIEW_STYLEABLE> = $r1;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        android.graphics.Rect $r3;
        android.content.res.TypedArray $r4;
        int[] $r5;
        boolean $z0;
        android.support.v4.view.NestedScrollingParentHelper $r6;
        android.support.v4.view.NestedScrollingChildHelper $r7;
        android.support.v4.widget.NestedScrollView$AccessibilityDelegate $r8;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect> = $r3;

        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsLayoutDirty> = 1;

        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsLaidOut> = 0;

        $r0.<android.support.v4.widget.NestedScrollView: android.view.View mChildToScrollTo> = null;

        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = 0;

        $r0.<android.support.v4.widget.NestedScrollView: boolean mSmoothScrollingEnabled> = 1;

        $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = -1;

        $r5 = newarray (int)[2];

        $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset> = $r5;

        $r5 = newarray (int)[2];

        $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollConsumed> = $r5;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void initScrollView()>();

        $r5 = <android.support.v4.widget.NestedScrollView: int[] SCROLLVIEW_STYLEABLE>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r5, $i0, 0);

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 0);

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void setFillViewport(boolean)>($z0);

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        $r6 = new android.support.v4.view.NestedScrollingParentHelper;

        specialinvoke $r6.<android.support.v4.view.NestedScrollingParentHelper: void <init>(android.view.ViewGroup)>($r0);

        $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingParentHelper mParentHelper> = $r6;

        $r7 = new android.support.v4.view.NestedScrollingChildHelper;

        specialinvoke $r7.<android.support.v4.view.NestedScrollingChildHelper: void <init>(android.view.View)>($r0);

        $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper> = $r7;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)>(1);

        $r8 = <android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE>;

        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>($r0, $r8);

        return;
    }

    static int access$000(android.support.v4.widget.NestedScrollView)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0;

        $r0 := @parameter0: android.support.v4.widget.NestedScrollView;

        $i0 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();

        return $i0;
    }

    private boolean canScroll()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();

        $i2 = $i2 + $i0;

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        $i2 = $i2 + $i0;

        if $i1 >= $i2 goto label2;

        return 1;

     label1:
        return 0;

     label2:
        return 0;
    }

    private static int clamp(int, int, int)
    {
        int $i0, $i1, $i2, $i3;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        if $i1 >= $i2 goto label1;

        if $i0 >= 0 goto label2;

     label1:
        return 0;

     label2:
        $i3 = $i1 + $i0;

        if $i3 <= $i2 goto label3;

        $i0 = $i2 - $i1;

        return $i0;

     label3:
        return $i0;
    }

    private void doScrollY(int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label2;

        $z0 = $r0.<android.support.v4.widget.NestedScrollView: boolean mSmoothScrollingEnabled>;

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void smoothScrollBy(int,int)>(0, $i0);

        return;

     label1:
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollBy(int,int)>(0, $i0);

        return;

     label2:
        return;
    }

    private void endDrag()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.support.v4.widget.EdgeEffectCompat $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = 0;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void recycleVelocityTracker()>();

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;

        virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;

        virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

        return;

     label1:
        return;
    }

    private void ensureGlows()
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0;
        android.support.v4.widget.EdgeEffectCompat $r1;
        android.content.Context $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)>($r0);

        if $i0 == 2 goto label1;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;

        if $r1 != null goto label2;

        $r2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.content.Context getContext()>();

        $r1 = new android.support.v4.widget.EdgeEffectCompat;

        specialinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: void <init>(android.content.Context)>($r2);

        $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop> = $r1;

        $r1 = new android.support.v4.widget.EdgeEffectCompat;

        specialinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: void <init>(android.content.Context)>($r2);

        $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom> = $r1;

        return;

     label1:
        $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop> = null;

        $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom> = null;

        return;

     label2:
        return;
    }

    private android.view.View findFocusableViewInBounds(boolean, int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.view.View $r1, $r4;
        java.util.ArrayList $r2;
        java.lang.Object $r3;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: java.util.ArrayList getFocusables(int)>(2);

        $r1 = null;

        $z1 = 0;

        $i3 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i2 = 0;

     label01:
        if $i2 >= $i3 goto label12;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        $r4 = (android.view.View) $r3;

        $i4 = virtualinvoke $r4.<android.view.View: int getTop()>();

        $i5 = virtualinvoke $r4.<android.view.View: int getBottom()>();

        if $i0 >= $i5 goto label03;

        if $i4 >= $i1 goto label03;

        if $i0 >= $i4 goto label04;

        if $i5 >= $i1 goto label04;

        $z3 = 1;

     label02:
        if $r1 != null goto label05;

        $r1 = $r4;

        $z1 = $z3;

     label03:
        $i2 = $i2 + 1;

        goto label01;

     label04:
        $z3 = 0;

        goto label02;

     label05:
        if $z0 == 0 goto label06;

        $i6 = virtualinvoke $r1.<android.view.View: int getTop()>();

        if $i4 < $i6 goto label07;

     label06:
        if $z0 != 0 goto label09;

        $i6 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        if $i5 <= $i6 goto label09;

     label07:
        $z2 = 1;

     label08:
        if $z1 == 0 goto label10;

        if $z3 == 0 goto label03;

        if $z2 == 0 goto label03;

        $r1 = $r4;

        goto label03;

     label09:
        $z2 = 0;

        goto label08;

     label10:
        if $z3 == 0 goto label11;

        $r1 = $r4;

        $z1 = 1;

        goto label03;

     label11:
        if $z2 == 0 goto label03;

        $r1 = $r4;

        goto label03;

     label12:
        return $r1;
    }

    private void flingWithNestedDispatch(int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        float $f0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        if $i1 > 0 goto label1;

        if $i0 <= 0 goto label4;

     label1:
        $i2 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();

        if $i1 < $i2 goto label2;

        if $i0 >= 0 goto label4;

     label2:
        $z0 = 1;

     label3:
        $f0 = (float) $i0;

        $z1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)>(0.0F, $f0);

        if $z1 != 0 goto label5;

        $f0 = (float) $i0;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedFling(float,float,boolean)>(0.0F, $f0, $z0);

        if $z0 == 0 goto label6;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void fling(int)>($i0);

        return;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        return;

     label6:
        return;
    }

    private int getScrollRange()
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2;
        android.view.View $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        $i2 = $i1 - $i2;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();

        $i2 = $i2 - $i1;

        $i2 = $i0 - $i2;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        return $i2;

     label1:
        return 0;
    }

    private float getVerticalScrollFactorCompat()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.util.TypedValue $r1;
        float $f0;
        android.content.Context $r2;
        byte $b0;
        android.content.res.Resources$Theme $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        android.content.res.Resources $r5;
        android.util.DisplayMetrics $r6;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $f0 = $r0.<android.support.v4.widget.NestedScrollView: float mVerticalScrollFactor>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label2;

        $r1 = new android.util.TypedValue;

        specialinvoke $r1.<android.util.TypedValue: void <init>()>();

        $r2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $z0 = virtualinvoke $r3.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16842829, $r1, 1);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Expected theme to define listPreferredItemHeight.");

        throw $r4;

     label1:
        $r5 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = virtualinvoke $r1.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>($r6);

        $r0.<android.support.v4.widget.NestedScrollView: float mVerticalScrollFactor> = $f0;

     label2:
        $f0 = $r0.<android.support.v4.widget.NestedScrollView: float mVerticalScrollFactor>;

        return $f0;
    }

    private boolean inChild(int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i2 <= 0 goto label1;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $i3 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i3 = $i3 - $i2;

        if $i1 < $i3 goto label2;

        $i3 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i3 = $i3 - $i2;

        if $i1 >= $i3 goto label3;

        $i3 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        if $i0 < $i3 goto label4;

        $i3 = virtualinvoke $r1.<android.view.View: int getRight()>();

        if $i0 >= $i3 goto label5;

        return 1;

     label1:
        return 0;

     label2:
        return 0;

     label3:
        return 0;

     label4:
        return 0;

     label5:
        return 0;
    }

    private void initOrResetVelocityTracker()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.VelocityTracker $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        if $r1 != null goto label1;

        $r1 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker> = $r1;

        return;

     label1:
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r1.<android.view.VelocityTracker: void clear()>();

        return;
    }

    private void initScrollView()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.support.v4.widget.ScrollerCompat $r1;
        android.content.Context $r2;
        android.view.ViewConfiguration $r3;
        int $i0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 = new android.support.v4.widget.ScrollerCompat;

        $r2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.content.Context getContext()>();

        specialinvoke $r1.<android.support.v4.widget.ScrollerCompat: void <init>(android.content.Context,android.view.animation.Interpolator)>($r2, null);

        $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller> = $r1;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void setFocusable(boolean)>(1);

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void setDescendantFocusability(int)>(262144);

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void setWillNotDraw(boolean)>(0);

        $r2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.content.Context getContext()>();

        $r3 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r2);

        $i0 = virtualinvoke $r3.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        $r0.<android.support.v4.widget.NestedScrollView: int mTouchSlop> = $i0;

        $i0 = virtualinvoke $r3.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        $r0.<android.support.v4.widget.NestedScrollView: int mMinimumVelocity> = $i0;

        $i0 = virtualinvoke $r3.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        $r0.<android.support.v4.widget.NestedScrollView: int mMaximumVelocity> = $i0;

        return;
    }

    private void initVelocityTrackerIfNotExists()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.VelocityTracker $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        if $r1 != null goto label1;

        $r1 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker> = $r1;

        return;

     label1:
        return;
    }

    private boolean isOffScreen(android.view.View)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $z0 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)>($r1, 0, $i0);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isViewDescendantOf(android.view.View, android.view.View)
    {
        android.view.View $r0, $r1;
        boolean $z0;
        android.view.ViewParent $r2;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.view.View;

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke $r0.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = $r2 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label2;

        $r0 = (android.view.View) $r2;

        $z0 = staticinvoke <android.support.v4.widget.NestedScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)>($r0, $r1);

        if $z0 != 0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    private boolean isWithinDeltaOfScreen(android.view.View, int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;
        android.graphics.Rect $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r1, $r2);

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i2 = $r2.<android.graphics.Rect: int bottom>;

        $i3 = $i2 + $i0;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        if $i3 < $i2 goto label1;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i3 = $r2.<android.graphics.Rect: int top>;

        $i3 = $i3 - $i0;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i2 = $i2 + $i1;

        if $i3 > $i2 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void onSecondaryPointerUp(android.view.MotionEvent)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.MotionEvent $r1;
        byte $b0;
        int $i1, $i2, $i3;
        float $f0;
        android.view.VelocityTracker $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        $i1 = $i1 & 65280;

        $i1 = $i1 >> 8;

        $i2 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i1);

        $i3 = $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId>;

        if $i2 != $i3 goto label3;

        if $i1 != 0 goto label2;

        $b0 = 1;

     label1:
        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $b0);

        $i3 = (int) $f0;

        $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i3;

        $i3 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $b0);

        $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = $i3;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        if $r2 == null goto label4;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void clear()>();

        return;

     label2:
        $b0 = 0;

        goto label1;

     label3:
        return;

     label4:
        return;
    }

    private void recycleVelocityTracker()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.VelocityTracker $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r1.<android.view.VelocityTracker: void recycle()>();

        $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker> = null;

        return;

     label1:
        return;
    }

    private boolean scrollAndFocus(int, int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        android.view.View $r1, $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $z0 = 1;

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $i4 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i3 = $i4 + $i3;

        if $i0 != 33 goto label4;

        $z1 = 1;

     label1:
        $r2 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View findFocusableViewInBounds(boolean,int,int)>($z1, $i1, $i2);

        $r1 = $r2;

        if $r2 != null goto label2;

        $r1 = $r0;

     label2:
        if $i1 < $i4 goto label5;

        if $i2 > $i3 goto label5;

        $z0 = 0;

     label3:
        $r2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View findFocus()>();

        if $r1 == $r2 goto label8;

        virtualinvoke $r1.<android.view.View: boolean requestFocus(int)>($i0);

        return $z0;

     label4:
        $z1 = 0;

        goto label1;

     label5:
        if $z1 == 0 goto label7;

        $i3 = $i1 - $i4;

     label6:
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void doScrollY(int)>($i3);

        goto label3;

     label7:
        $i3 = $i2 - $i3;

        goto label6;

     label8:
        return $z0;
    }

    private void scrollToChild(android.view.View)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        android.graphics.Rect $r2;
        int $i0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r1, $r2);

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>($r2);

        if $i0 == 0 goto label1;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollBy(int,int)>(0, $i0);

        return;

     label1:
        return;
    }

    private boolean scrollToChildRect(android.graphics.Rect, boolean)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.graphics.Rect $r1;
        boolean $z0, $z1;
        int $i0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.graphics.Rect;

        $z0 := @parameter1: boolean;

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>($r1);

        if $i0 == 0 goto label2;

        $z1 = 1;

     label1:
        if $z1 == 0 goto label4;

        if $z0 == 0 goto label3;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollBy(int,int)>(0, $i0);

        return $z1;

     label2:
        $z1 = 0;

        goto label1;

     label3:
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void smoothScrollBy(int,int)>(0, $i0);

        return $z1;

     label4:
        return $z1;
    }

    public void addView(android.view.View)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0;
        java.lang.IllegalStateException $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");

        throw $r2;

     label1:
        specialinvoke $r0.<android.widget.FrameLayout: void addView(android.view.View)>($r1);

        return;
    }

    public void addView(android.view.View, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0, $i1;
        java.lang.IllegalStateException $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i1 <= 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");

        throw $r2;

     label1:
        specialinvoke $r0.<android.widget.FrameLayout: void addView(android.view.View,int)>($r1, $i0);

        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0, $i1;
        android.view.ViewGroup$LayoutParams $r2;
        java.lang.IllegalStateException $r3;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i1 <= 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");

        throw $r3;

     label1:
        specialinvoke $r0.<android.widget.FrameLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r1, $i0, $r2);

        return;
    }

    public void addView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0;
        java.lang.IllegalStateException $r3;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");

        throw $r3;

     label1:
        specialinvoke $r0.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r1, $r2);

        return;
    }

    public boolean arrowScroll(int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r1, $r2;
        android.view.FocusFinder $r3;
        boolean $z0;
        android.graphics.Rect $r4;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $r2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View findFocus()>();

        $r1 = $r2;

        if $r2 != $r0 goto label1;

        $r1 = null;

     label1:
        $r3 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $r2 = virtualinvoke $r3.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>($r0, $r1, $i0);

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getMaxScrollAmount()>();

        if $r2 == null goto label4;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $z0 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)>($r2, $i2, $i1);

        if $z0 == 0 goto label4;

        $r4 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r2.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r4);

        $r4 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r2, $r4);

        $r4 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>($r4);

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void doScrollY(int)>($i2);

        virtualinvoke $r2.<android.view.View: boolean requestFocus(int)>($i0);

     label2:
        if $r1 == null goto label3;

        $z0 = virtualinvoke $r1.<android.view.View: boolean isFocused()>();

        if $z0 == 0 goto label3;

        $z0 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean isOffScreen(android.view.View)>($r1);

        if $z0 == 0 goto label3;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getDescendantFocusability()>();

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void setDescendantFocusability(int)>(131072);

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean requestFocus()>();

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void setDescendantFocusability(int)>($i2);

     label3:
        return 1;

     label4:
        $i3 = $i2;

        if $i0 != 33 goto label7;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        if $i1 >= $i2 goto label7;

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

     label5:
        if $i3 == 0 goto label9;

        if $i0 != 130 goto label8;

     label6:
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void doScrollY(int)>($i3);

        goto label2;

     label7:
        if $i0 != 130 goto label5;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i1 <= 0 goto label5;

        $r2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $i4 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i5 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $i5 = $i1 + $i5;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        $i1 = $i5 - $i1;

        $i5 = $i4 - $i1;

        if $i5 >= $i2 goto label5;

        $i3 = $i4 - $i1;

        goto label5;

     label8:
        $i3 = neg $i3;

        goto label6;

     label9:
        return 0;
    }

    public void computeScroll()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.support.v4.widget.ScrollerCompat $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1;
        android.support.v4.widget.EdgeEffectCompat $r2;
        float $f0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $z0 = 1;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;

        $z1 = virtualinvoke $r1.<android.support.v4.widget.ScrollerCompat: boolean computeScrollOffset()>();

        if $z1 == 0 goto label5;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;

        $i1 = virtualinvoke $r1.<android.support.v4.widget.ScrollerCompat: int getCurrX()>();

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;

        $i4 = virtualinvoke $r1.<android.support.v4.widget.ScrollerCompat: int getCurrY()>();

        if $i2 != $i1 goto label1;

        if $i3 == $i4 goto label6;

     label1:
        $i5 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)>($r0);

        if $i0 == 0 goto label2;

        if $i0 != 1 goto label3;

        if $i5 <= 0 goto label3;

     label2:
        $i0 = $i1 - $i2;

        $i1 = $i4 - $i3;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean)>($i0, $i1, $i2, $i3, 0, $i5, 0, 0, 0);

        if $z0 == 0 goto label7;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void ensureGlows()>();

        if $i4 > 0 goto label4;

        if $i3 <= 0 goto label4;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;

        $f0 = virtualinvoke $r1.<android.support.v4.widget.ScrollerCompat: float getCurrVelocity()>();

        $i5 = (int) $f0;

        virtualinvoke $r2.<android.support.v4.widget.EdgeEffectCompat: boolean onAbsorb(int)>($i5);

        return;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        if $i4 < $i5 goto label8;

        if $i3 >= $i5 goto label9;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;

        $f0 = virtualinvoke $r1.<android.support.v4.widget.ScrollerCompat: float getCurrVelocity()>();

        $i5 = (int) $f0;

        virtualinvoke $r2.<android.support.v4.widget.EdgeEffectCompat: boolean onAbsorb(int)>($i5);

        return;

     label5:
        return;

     label6:
        return;

     label7:
        return;

     label8:
        return;

     label9:
        return;
    }

    protected int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.graphics.Rect $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.graphics.Rect;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i1 != 0 goto label01;

        return 0;

     label01:
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i1 = $i3;

        $i0 = $i3 + $i2;

        $i4 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getVerticalFadingEdgeLength()>();

        $i5 = $r1.<android.graphics.Rect: int top>;

        if $i5 <= 0 goto label02;

        $i1 = $i3 + $i4;

     label02:
        $i5 = $r1.<android.graphics.Rect: int bottom>;

        $r2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $i3 = virtualinvoke $r2.<android.view.View: int getHeight()>();

        if $i5 >= $i3 goto label03;

        $i0 = $i0 - $i4;

     label03:
        $i5 = $r1.<android.graphics.Rect: int bottom>;

        if $i5 <= $i0 goto label06;

        $i5 = $r1.<android.graphics.Rect: int top>;

        if $i5 <= $i1 goto label06;

        $i5 = virtualinvoke $r1.<android.graphics.Rect: int height()>();

        if $i5 <= $i2 goto label05;

        $i5 = $r1.<android.graphics.Rect: int top>;

        $i5 = $i5 - $i1;

        $i5 = 0 + $i5;

     label04:
        $r2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $i4 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $i0 = $i4 - $i0;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i0);

        return $i5;

     label05:
        $i5 = $r1.<android.graphics.Rect: int bottom>;

        $i5 = $i5 - $i0;

        $i5 = 0 + $i5;

        goto label04;

     label06:
        $i5 = $r1.<android.graphics.Rect: int top>;

        if $i5 >= $i1 goto label09;

        $i5 = $r1.<android.graphics.Rect: int bottom>;

        if $i5 >= $i0 goto label10;

        $i5 = virtualinvoke $r1.<android.graphics.Rect: int height()>();

        if $i5 <= $i2 goto label08;

        $i5 = $r1.<android.graphics.Rect: int bottom>;

        $i5 = $i0 - $i5;

        $i5 = 0 - $i5;

     label07:
        $i4 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i4 = neg $i4;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i4);

        return $i5;

     label08:
        $i5 = $r1.<android.graphics.Rect: int top>;

        $i5 = $i1 - $i5;

        $i5 = 0 - $i5;

        goto label07;

     label09:
        return 0;

     label10:
        return 0;
    }

    protected int computeVerticalScrollOffset()
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 = specialinvoke $r0.<android.widget.FrameLayout: int computeVerticalScrollOffset()>();

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        return $i0;
    }

    protected int computeVerticalScrollRange()
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        $i2 = $i0 - $i2;

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();

        $i0 = $i2 - $i0;

        if $i1 != 0 goto label1;

        return $i0;

     label1:
        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $i2 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i1 = $i2;

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i0 = $i2 - $i0;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        if $i3 >= 0 goto label3;

        $i1 = $i2 - $i3;

     label2:
        return $i1;

     label3:
        if $i3 <= $i0 goto label2;

        $i3 = $i3 - $i0;

        $i1 = $i2 + $i3;

        goto label2;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.KeyEvent $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.KeyEvent;

        $z0 = specialinvoke $r0.<android.widget.FrameLayout: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean executeKeyEvent(android.view.KeyEvent)>($r1);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean dispatchNestedFling(float, float, boolean)
    {
        android.support.v4.widget.NestedScrollView $r0;
        float $f0, $f1;
        boolean $z0;
        android.support.v4.view.NestedScrollingChildHelper $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $z0 := @parameter2: boolean;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>($f0, $f1, $z0);

        return $z0;
    }

    public boolean dispatchNestedPreFling(float, float)
    {
        android.support.v4.widget.NestedScrollView $r0;
        float $f0, $f1;
        android.support.v4.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)>($f0, $f1);

        return $z0;
    }

    public boolean dispatchNestedPreScroll(int, int, int[], int[])
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1;
        int[] $r1, $r2;
        android.support.v4.view.NestedScrollingChildHelper $r3;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: int[];

        $r2 := @parameter3: int[];

        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;

        $z0 = virtualinvoke $r3.<android.support.v4.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[])>($i0, $i1, $r1, $r2);

        return $z0;
    }

    public boolean dispatchNestedScroll(int, int, int, int, int[])
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1;
        android.support.v4.view.NestedScrollingChildHelper $r2;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 := @parameter4: int[];

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;

        $z0 = virtualinvoke $r2.<android.support.v4.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[])>($i0, $i1, $i2, $i3, $r1);

        return $z0;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.support.v4.widget.EdgeEffectCompat $r2;
        boolean $z0;
        float $f0, $f1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke $r0.<android.widget.FrameLayout: void draw(android.graphics.Canvas)>($r1);

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;

        if $r2 == null goto label4;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z0 != 0 goto label2;

        $i2 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getWidth()>();

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();

        $i3 = $i0 - $i3;

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingRight()>();

        $i0 = $i3 - $i0;

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();

        $f0 = (float) $i3;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i1);

        $f1 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        virtualinvoke $r2.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>($i0, $i3);

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>($r1);

        if $z0 == 0 goto label1;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>($r0);

     label1:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i2);

     label2:
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z0 != 0 goto label5;

        $i3 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getWidth()>();

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();

        $i2 = $i2 - $i0;

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingRight()>();

        $i2 = $i2 - $i0;

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $i4 = neg $i2;

        $i5 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();

        $i5 = $i4 + $i5;

        $f1 = (float) $i5;

        $i5 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i1);

        $i5 = $i5 + $i0;

        $f0 = (float) $i5;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f1, $f0);

        $f1 = (float) $i2;

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float,float,float)>(180.0F, $f1, 0.0F);

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;

        virtualinvoke $r2.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>($i2, $i0);

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>($r1);

        if $z0 == 0 goto label3;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>($r0);

     label3:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i3);

        return;

     label4:
        return;

     label5:
        return;
    }

    public boolean executeKeyEvent(android.view.KeyEvent)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.KeyEvent $r1;
        android.view.View $r2, $r4;
        boolean $z0, $z1;
        android.graphics.Rect $r3;
        int $i0;
        android.view.FocusFinder $r5;
        short $s1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.KeyEvent;

        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r3.<android.graphics.Rect: void setEmpty()>();

        $z0 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean canScroll()>();

        if $z0 != 0 goto label02;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean isFocused()>();

        if $z0 == 0 goto label11;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i0 == 4 goto label12;

        $r4 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View findFocus()>();

        $r2 = $r4;

        if $r4 != $r0 goto label01;

        $r2 = null;

     label01:
        $r5 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $r4 = virtualinvoke $r5.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>($r0, $r2, 130);

        if $r4 == null goto label13;

        if $r4 == $r0 goto label14;

        $z0 = virtualinvoke $r4.<android.view.View: boolean requestFocus(int)>(130);

        if $z0 == 0 goto label15;

        return 1;

     label02:
        $z0 = 0;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i0 != 0 goto label03;

        $i0 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        lookupswitch($i0)
        {
            case 19: goto label04;
            case 20: goto label06;
            case 62: goto label08;
            default: goto label03;
        };

     label03:
        return $z0;

     label04:
        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean isAltPressed()>();

        if $z0 != 0 goto label05;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean arrowScroll(int)>(33);

        goto label03;

     label05:
        $z0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean fullScroll(int)>(33);

        goto label03;

     label06:
        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean isAltPressed()>();

        if $z0 != 0 goto label07;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean arrowScroll(int)>(130);

        goto label03;

     label07:
        $z0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean fullScroll(int)>(130);

        goto label03;

     label08:
        $z1 = virtualinvoke $r1.<android.view.KeyEvent: boolean isShiftPressed()>();

        if $z1 == 0 goto label10;

        $s1 = 33;

     label09:
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean pageScroll(int)>($s1);

        goto label03;

     label10:
        $s1 = 130;

        goto label09;

     label11:
        return 0;

     label12:
        return 0;

     label13:
        return 0;

     label14:
        return 0;

     label15:
        return 0;
    }

    public void fling(int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r1;
        android.support.v4.widget.ScrollerCompat $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i2 <= 0 goto label1;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        $i2 = $i2 - $i1;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();

        $i2 = $i2 - $i1;

        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $i1 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        $i4 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i1 = $i1 - $i2;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        $i1 = $i2 / 2;

        virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: void fling(int,int,int,int,int,int,int,int,int,int)>($i3, $i4, 0, $i0, 0, 0, 0, $i5, 0, $i1);

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>($r0);

        return;

     label1:
        return;
    }

    public boolean fullScroll(int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.graphics.Rect $r1, $r3;
        android.view.View $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 := @parameter0: int;

        if $i0 != 130 goto label3;

        $z0 = 1;

     label1:
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $r1.<android.graphics.Rect: int top> = 0;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $r1.<android.graphics.Rect: int bottom> = $i1;

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i2 <= 0 goto label2;

        $i2 = $i2 + -1;

        $r2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>($i2);

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i2 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        $i3 = $i2 + $i3;

        $r1.<android.graphics.Rect: int bottom> = $i3;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i3 = $r3.<android.graphics.Rect: int bottom>;

        $i3 = $i3 - $i1;

        $r1.<android.graphics.Rect: int top> = $i3;

     label2:
        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i3 = $r3.<android.graphics.Rect: int top>;

        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i2 = $r3.<android.graphics.Rect: int bottom>;

        $z0 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean scrollAndFocus(int,int,int)>($i0, $i3, $i2);

        return $z0;

     label3:
        $z0 = 0;

        goto label1;
    }

    protected float getBottomFadingEdgeStrength()
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;
        android.view.View $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i0 != 0 goto label1;

        return 0.0F;

     label1:
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getVerticalFadingEdgeLength()>();

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        $i0 = $i0 - $i2;

        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $i2 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i3 = $i2 - $i3;

        $i0 = $i3 - $i0;

        if $i0 >= $i1 goto label2;

        $f0 = (float) $i0;

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        return $f0;

     label2:
        return 1.0F;
    }

    public int getMaxScrollAmount()
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0;
        float $f0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $f0 = (float) $i0;

        $f0 = 0.5F * $f0;

        $i0 = (int) $f0;

        return $i0;
    }

    public int getNestedScrollAxes()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.support.v4.view.NestedScrollingParentHelper $r1;
        int $i0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingParentHelper mParentHelper>;

        $i0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingParentHelper: int getNestedScrollAxes()>();

        return $i0;
    }

    protected float getTopFadingEdgeStrength()
    {
        android.support.v4.widget.NestedScrollView $r0;
        float $f0, $f1;
        int $i0, $i1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i0 != 0 goto label1;

        return 0.0F;

     label1:
        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getVerticalFadingEdgeLength()>();

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        if $i1 >= $i0 goto label2;

        $f1 = (float) $i1;

        $f0 = (float) $i0;

        $f0 = $f1 / $f0;

        return $f0;

     label2:
        return 1.0F;
    }

    public boolean hasNestedScrollingParent()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.support.v4.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent()>();

        return $z0;
    }

    public boolean isNestedScrollingEnabled()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.support.v4.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()>();

        return $z0;
    }

    protected void measureChild(android.view.View, int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2;
        android.view.ViewGroup$LayoutParams $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingRight()>();

        $i2 = $i1 + $i2;

        $i1 = $r2.<android.view.ViewGroup$LayoutParams: int width>;

        $i2 = staticinvoke <android.support.v4.widget.NestedScrollView: int getChildMeasureSpec(int,int,int)>($i0, $i2, $i1);

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i2, $i1);

        return;
    }

    protected void measureChildWithMargins(android.view.View, int, int, int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;
        android.view.ViewGroup$LayoutParams $r2;
        android.view.ViewGroup$MarginLayoutParams $r3;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.view.ViewGroup$MarginLayoutParams) $r2;

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingRight()>();

        $i3 = $i3 + $i2;

        $i2 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i3 = $i3 + $i2;

        $i2 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i3 = $i3 + $i2;

        $i3 = $i3 + $i1;

        $i2 = $r3.<android.view.ViewGroup$MarginLayoutParams: int width>;

        $i3 = staticinvoke <android.support.v4.widget.NestedScrollView: int getChildMeasureSpec(int,int,int)>($i0, $i3, $i2);

        $i2 = $r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i1 = $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i2 = $i2 + $i1;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, 0);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i3, $i2);

        return;
    }

    public void onAttachedToWindow()
    {
        android.support.v4.widget.NestedScrollView $r0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsLaidOut> = 0;

        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.MotionEvent $r1;
        int $i0, $i2, $i3;
        boolean $z0;
        float $f0, $f1;
        byte $b1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getSource(android.view.MotionEvent)>($r1);

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i0)
        {
            case 8: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        $z0 = $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>;

        if $z0 != 0 goto label1;

        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getAxisValue(android.view.MotionEvent,int)>($r1, 9);

        $b1 = $f0 cmpl 0.0F;

        if $b1 == 0 goto label1;

        $f1 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: float getVerticalScrollFactorCompat()>();

        $f1 = $f1 * $f0;

        $i0 = (int) $f1;

        $i2 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i0 = $i3 - $i0;

        if $i0 >= 0 goto label4;

        $i0 = 0;

     label3:
        if $i0 == $i3 goto label1;

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        specialinvoke $r0.<android.widget.FrameLayout: void scrollTo(int,int)>($i3, $i0);

        return 1;

     label4:
        if $i0 <= $i2 goto label3;

        $i0 = $i2;

        goto label3;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        float $f0;
        android.view.VelocityTracker $r4;
        android.view.ViewParent $r5;
        android.support.v4.widget.ScrollerCompat $r6;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = 1;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 2 goto label01;

        $z1 = $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>;

        if $z1 == 0 goto label01;

        return 1;

     label01:
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        if $i1 != 0 goto label02;

        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollVertically(android.view.View,int)>($r0, 1);

        if $z1 != 0 goto label02;

        return 0;

     label02:
        $i1 = $i0 & 255;

        lookupswitch($i1)
        {
            case 0: goto label06;
            case 1: goto label10;
            case 2: goto label04;
            case 3: goto label10;
            case 4: goto label03;
            case 5: goto label03;
            case 6: goto label11;
            default: goto label03;
        };

     label03:
        $z0 = $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>;

        return $z0;

     label04:
        $i0 = $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId>;

        if $i0 == -1 goto label03;

        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, $i0);

        if $i1 != -1 goto label05;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid pointerId=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in onInterceptTouchEvent");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NestedScrollView", $r3);

        goto label03;

     label05:
        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i1);

        $i0 = (int) $f0;

        $i1 = $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY>;

        $i1 = $i0 - $i1;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $i2 = $r0.<android.support.v4.widget.NestedScrollView: int mTouchSlop>;

        if $i1 <= $i2 goto label03;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getNestedScrollAxes()>();

        $i2 = $i2 & 2;

        if $i2 != 0 goto label03;

        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = 1;

        $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i0;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void initVelocityTrackerIfNotExists()>();

        $r4 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r4.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

        $r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset> = 0;

        $r5 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.ViewParent getParent()>();

        if $r5 == null goto label03;

        interfaceinvoke $r5.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

        goto label03;

     label06:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i2 = (int) $f0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $i1 = (int) $f0;

        $z1 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean inChild(int,int)>($i1, $i2);

        if $z1 != 0 goto label07;

        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = 0;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void recycleVelocityTracker()>();

        goto label03;

     label07:
        $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i2;

        $i2 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, 0);

        $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = $i2;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void initOrResetVelocityTracker()>();

        $r4 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r4.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

        $r6 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;

        $z1 = virtualinvoke $r6.<android.support.v4.widget.ScrollerCompat: boolean isFinished()>();

        if $z1 != 0 goto label09;

     label08:
        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = $z0;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean startNestedScroll(int)>(2);

        goto label03;

     label09:
        $z0 = 0;

        goto label08;

     label10:
        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = 0;

        $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = -1;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void recycleVelocityTracker()>();

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void stopNestedScroll()>();

        goto label03;

     label11:
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void onSecondaryPointerUp(android.view.MotionEvent)>($r1);

        goto label03;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        android.support.v4.widget.NestedScrollView$SavedState $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        specialinvoke $r0.<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);

        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsLayoutDirty> = 0;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.view.View mChildToScrollTo>;

        if $r1 == null goto label1;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.view.View mChildToScrollTo>;

        $z0 = staticinvoke <android.support.v4.widget.NestedScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)>($r1, $r0);

        if $z0 == 0 goto label1;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.view.View mChildToScrollTo>;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollToChild(android.view.View)>($r1);

     label1:
        $r0.<android.support.v4.widget.NestedScrollView: android.view.View mChildToScrollTo> = null;

        $z0 = $r0.<android.support.v4.widget.NestedScrollView: boolean mIsLaidOut>;

        if $z0 != 0 goto label4;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$SavedState mSavedState>;

        if $r2 == null goto label2;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$SavedState mSavedState>;

        $i0 = $r2.<android.support.v4.widget.NestedScrollView$SavedState: int scrollPosition>;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollTo(int,int)>($i2, $i0);

        $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$SavedState mSavedState> = null;

     label2:
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i2 <= 0 goto label5;

        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

     label3:
        $i3 = $i3 - $i1;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        $i3 = $i3 - $i1;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();

        $i3 = $i3 - $i1;

        $i3 = $i2 - $i3;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        if $i2 <= $i3 goto label6;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollTo(int,int)>($i2, $i3);

     label4:
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollTo(int,int)>($i3, $i2);

        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsLaidOut> = 1;

        return;

     label5:
        $i2 = 0;

        goto label3;

     label6:
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        if $i3 >= 0 goto label4;

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollTo(int,int)>($i3, 0);

        goto label4;
    }

    protected void onMeasure(int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.widget.FrameLayout$LayoutParams $r3;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<android.widget.FrameLayout: void onMeasure(int,int)>($i0, $i1);

        $z0 = $r0.<android.support.v4.widget.NestedScrollView: boolean mFillViewport>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $i1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        if $i1 == 0 goto label2;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i1 <= 0 goto label3;

        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getMeasuredHeight()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        if $i2 >= $i1 goto label4;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.FrameLayout$LayoutParams) $r2;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingRight()>();

        $i3 = $i2 + $i3;

        $i2 = $r3.<android.widget.FrameLayout$LayoutParams: int width>;

        $i3 = staticinvoke <android.support.v4.widget.NestedScrollView: int getChildMeasureSpec(int,int,int)>($i0, $i3, $i2);

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();

        $i2 = $i1 - $i2;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        $i2 = $i2 - $i1;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, 1073741824);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i3, $i2);

        return;

     label2:
        return;

     label3:
        return;

     label4:
        return;
    }

    public boolean onNestedFling(android.view.View, float, float, boolean)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        float $f0, $f1;
        boolean $z0;
        int $i0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $z0 := @parameter3: boolean;

        if $z0 != 0 goto label1;

        $i0 = (int) $f1;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void flingWithNestedDispatch(int)>($i0);

        return 1;

     label1:
        return 0;
    }

    public boolean onNestedPreFling(android.view.View, float, float)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        float $f0, $f1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        return 0;
    }

    public void onNestedPreScroll(android.view.View, int, int, int[])
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0, $i1;
        int[] $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: int[];

        return;
    }

    public void onNestedScroll(android.view.View, int, int, int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollBy(int,int)>(0, $i3);

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i2 = $i1 - $i2;

        $i3 = $i3 - $i2;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[])>(0, $i2, 0, $i3, null);

        return;
    }

    public void onNestedScrollAccepted(android.view.View, android.view.View, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1, $r2;
        int $i0;
        android.support.v4.view.NestedScrollingParentHelper $r3;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingParentHelper mParentHelper>;

        virtualinvoke $r3.<android.support.v4.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int)>($r1, $r2, $i0);

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean startNestedScroll(int)>(2);

        return;
    }

    protected void onOverScrolled(int, int, boolean, boolean)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1;
        boolean $z0, $z1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        specialinvoke $r0.<android.widget.FrameLayout: void scrollTo(int,int)>($i0, $i1);

        return;
    }

    protected boolean onRequestFocusInDescendants(int, android.graphics.Rect)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0;
        android.graphics.Rect $r1;
        android.view.View $r2;
        android.view.FocusFinder $r3;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Rect;

        if $i0 != 2 goto label3;

        $i0 = 130;

     label1:
        if $r1 != null goto label4;

        $r3 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $r2 = virtualinvoke $r3.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>($r0, null, $i0);

     label2:
        if $r2 != null goto label5;

        return 0;

     label3:
        if $i0 != 1 goto label1;

        $i0 = 33;

        goto label1;

     label4:
        $r3 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $r2 = virtualinvoke $r3.<android.view.FocusFinder: android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)>($r0, $r1, $i0);

        goto label2;

     label5:
        $z0 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean isOffScreen(android.view.View)>($r2);

        if $z0 != 0 goto label6;

        $z0 = virtualinvoke $r2.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>($i0, $r1);

        return $z0;

     label6:
        return 0;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.os.Parcelable $r1;
        android.support.v4.widget.NestedScrollView$SavedState $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.os.Parcelable;

        $r2 = (android.support.v4.widget.NestedScrollView$SavedState) $r1;

        $r1 = virtualinvoke $r2.<android.support.v4.widget.NestedScrollView$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke $r0.<android.widget.FrameLayout: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$SavedState mSavedState> = $r2;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void requestLayout()>();

        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.support.v4.widget.NestedScrollView$SavedState $r1;
        android.os.Parcelable $r2;
        int $i0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r2 = specialinvoke $r0.<android.widget.FrameLayout: android.os.Parcelable onSaveInstanceState()>();

        $r1 = new android.support.v4.widget.NestedScrollView$SavedState;

        specialinvoke $r1.<android.support.v4.widget.NestedScrollView$SavedState: void <init>(android.os.Parcelable)>($r2);

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $r1.<android.support.v4.widget.NestedScrollView$SavedState: int scrollPosition> = $i0;

        return $r1;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        boolean $z0;
        android.graphics.Rect $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke $r0.<android.widget.FrameLayout: void onSizeChanged(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View findFocus()>();

        if $r1 == null goto label2;

        if $r0 != $r1 goto label1;

        return;

     label1:
        $z0 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)>($r1, 0, $i3);

        if $z0 == 0 goto label3;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r1, $r2);

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>($r2);

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void doScrollY(int)>($i3);

        return;

     label2:
        return;

     label3:
        return;
    }

    public boolean onStartNestedScroll(android.view.View, android.view.View, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1, $r2;
        int $i0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void onStopNestedScroll(android.view.View)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void stopNestedScroll()>();

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.MotionEvent $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r2, $r9;
        boolean $z0, $z1;
        float $f0, $f1, $f2;
        android.view.VelocityTracker $r4;
        android.support.v4.widget.ScrollerCompat $r5;
        android.view.ViewParent $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        android.support.v4.widget.EdgeEffectCompat $r10;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.MotionEvent;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void initVelocityTrackerIfNotExists()>();

        $r3 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>($r1);

        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>($r1);

        if $i1 != 0 goto label01;

        $r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset> = 0;

     label01:
        $i0 = $r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset>;

        $f0 = (float) $i0;

        virtualinvoke $r3.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f0);

        lookupswitch($i1)
        {
            case 0: goto label04;
            case 1: goto label24;
            case 2: goto label10;
            case 3: goto label26;
            case 4: goto label02;
            case 5: goto label27;
            case 6: goto label28;
            default: goto label02;
        };

     label02:
        $r4 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        if $r4 == null goto label03;

        $r4 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r4.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r3);

     label03:
        virtualinvoke $r3.<android.view.MotionEvent: void recycle()>();

        return 1;

     label04:
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i1 != 0 goto label05;

        return 0;

     label05:
        $r5 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;

        $z0 = virtualinvoke $r5.<android.support.v4.widget.ScrollerCompat: boolean isFinished()>();

        if $z0 != 0 goto label09;

        $z0 = 1;

     label06:
        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = $z0;

        if $z0 == 0 goto label07;

        $r6 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.ViewParent getParent()>();

        if $r6 == null goto label07;

        interfaceinvoke $r6.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label07:
        $r5 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;

        $z0 = virtualinvoke $r5.<android.support.v4.widget.ScrollerCompat: boolean isFinished()>();

        if $z0 != 0 goto label08;

        $r5 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;

        virtualinvoke $r5.<android.support.v4.widget.ScrollerCompat: void abortAnimation()>();

     label08:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i1 = (int) $f0;

        $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i1;

        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, 0);

        $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = $i1;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean startNestedScroll(int)>(2);

        goto label02;

     label09:
        $z0 = 0;

        goto label06;

     label10:
        $i1 = $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId>;

        $i2 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, $i1);

        if $i2 != -1 goto label11;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid pointerId=");

        $i2 = $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in onTouchEvent");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NestedScrollView", $r8);

        goto label02;

     label11:
        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i2);

        $i1 = (int) $f0;

        $i0 = $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY>;

        $i0 = $i0 - $i1;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollConsumed>;

        $r9 = $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[])>(0, $i0, $r2, $r9);

        if $z0 == 0 goto label12;

        $r9 = $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollConsumed>;

        $i3 = $r9[1];

        $i0 = $i0 - $i3;

        $r9 = $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;

        $i3 = $r9[1];

        $f0 = (float) $i3;

        virtualinvoke $r3.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f0);

        $i3 = $r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset>;

        $r9 = $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;

        $i4 = $r9[1];

        $i4 = $i3 + $i4;

        $r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset> = $i4;

     label12:
        $z0 = $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>;

        if $z0 != 0 goto label14;

        $i4 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i3 = $r0.<android.support.v4.widget.NestedScrollView: int mTouchSlop>;

        if $i4 <= $i3 goto label14;

        $r6 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.ViewParent getParent()>();

        if $r6 == null goto label13;

        interfaceinvoke $r6.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label13:
        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = 1;

        if $i0 <= 0 goto label18;

        $i4 = $r0.<android.support.v4.widget.NestedScrollView: int mTouchSlop>;

        $i0 = $i0 - $i4;

     label14:
        $z0 = $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>;

        if $z0 == 0 goto label02;

        $r9 = $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;

        $i4 = $r9[1];

        $i4 = $i1 - $i4;

        $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i4;

        $i4 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i3 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();

        $i1 = staticinvoke <android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)>($r0);

        if $i1 == 0 goto label15;

        if $i1 != 1 goto label19;

        if $i3 <= 0 goto label19;

     label15:
        $z0 = 1;

     label16:
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $z1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean)>(0, $i0, 0, $i1, 0, $i3, 0, 0, 1);

        if $z1 == 0 goto label17;

        $z1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean hasNestedScrollingParent()>();

        if $z1 != 0 goto label17;

        $r4 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r4.<android.view.VelocityTracker: void clear()>();

     label17:
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i5 = $i1 - $i4;

        $i1 = $i0 - $i5;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;

        $z1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[])>(0, $i5, 0, $i1, $r2);

        if $z1 == 0 goto label20;

        $i5 = $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY>;

        $r9 = $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;

        $i4 = $r9[1];

        $i5 = $i5 - $i4;

        $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i5;

        $r9 = $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;

        $i5 = $r9[1];

        $f0 = (float) $i5;

        virtualinvoke $r3.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f0);

        $i5 = $r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset>;

        $r9 = $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;

        $i4 = $r9[1];

        $i5 = $i5 + $i4;

        $r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset> = $i5;

        goto label02;

     label18:
        $i5 = $r0.<android.support.v4.widget.NestedScrollView: int mTouchSlop>;

        $i0 = $i0 + $i5;

        goto label14;

     label19:
        $z0 = 0;

        goto label16;

     label20:
        if $z0 == 0 goto label02;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void ensureGlows()>();

        $i1 = $i4 + $i0;

        if $i1 >= 0 goto label23;

        $r10 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;

        $f0 = (float) $i0;

        $i5 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $f1 = (float) $i5;

        $f1 = $f0 / $f1;

        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i2);

        $i5 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getWidth()>();

        $f2 = (float) $i5;

        $f2 = $f0 / $f2;

        virtualinvoke $r10.<android.support.v4.widget.EdgeEffectCompat: boolean onPull(float,float)>($f1, $f2);

        $r10 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;

        $z1 = virtualinvoke $r10.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z1 != 0 goto label21;

        $r10 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;

        virtualinvoke $r10.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

     label21:
        $r10 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;

        if $r10 == null goto label02;

        $r10 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;

        $z1 = virtualinvoke $r10.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z1 == 0 goto label22;

        $r10 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;

        $z1 = virtualinvoke $r10.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z1 != 0 goto label02;

     label22:
        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>($r0);

        goto label02;

     label23:
        if $i1 <= $i3 goto label21;

        $r10 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;

        $f2 = (float) $i0;

        $i5 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $f1 = (float) $i5;

        $f2 = $f2 / $f1;

        $f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i2);

        $i5 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getWidth()>();

        $f0 = (float) $i5;

        $f1 = $f1 / $f0;

        $f1 = 1.0F - $f1;

        virtualinvoke $r10.<android.support.v4.widget.EdgeEffectCompat: boolean onPull(float,float)>($f2, $f1);

        $r10 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;

        $z1 = virtualinvoke $r10.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z1 != 0 goto label21;

        $r10 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;

        virtualinvoke $r10.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

        goto label21;

     label24:
        $z1 = $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>;

        if $z1 == 0 goto label02;

        $r4 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;

        $i5 = $r0.<android.support.v4.widget.NestedScrollView: int mMaximumVelocity>;

        $f2 = (float) $i5;

        virtualinvoke $r4.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f2);

        $i5 = $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId>;

        $f2 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)>($r4, $i5);

        $i5 = (int) $f2;

        $i4 = staticinvoke <java.lang.Math: int abs(int)>($i5);

        $i3 = $r0.<android.support.v4.widget.NestedScrollView: int mMinimumVelocity>;

        if $i4 <= $i3 goto label25;

        $i5 = neg $i5;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void flingWithNestedDispatch(int)>($i5);

     label25:
        $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = -1;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void endDrag()>();

        goto label02;

     label26:
        $z1 = $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>;

        if $z1 == 0 goto label02;

        $i5 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i5 <= 0 goto label02;

        $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = -1;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void endDrag()>();

        goto label02;

     label27:
        $i5 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);

        $f2 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i5);

        $i4 = (int) $f2;

        $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i4;

        $i5 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i5);

        $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = $i5;

        goto label02;

     label28:
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void onSecondaryPointerUp(android.view.MotionEvent)>($r1);

        $i5 = $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId>;

        $i5 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, $i5);

        $f2 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i5);

        $i5 = (int) $f2;

        $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i5;

        goto label02;
    }

    boolean overScrollByCompat(int, int, int, int, int, int, int, int, boolean)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0, $z1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 := @parameter4: int;

        $i5 := @parameter5: int;

        $i6 := @parameter6: int;

        $i7 := @parameter7: int;

        $z0 := @parameter8: boolean;

        $i8 = staticinvoke <android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)>($r0);

        $i9 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int computeHorizontalScrollRange()>();

        $i10 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int computeHorizontalScrollExtent()>();

        if $i9 <= $i10 goto label12;

        $z0 = 1;

     label01:
        $i10 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int computeVerticalScrollRange()>();

        $i9 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int computeVerticalScrollExtent()>();

        if $i10 <= $i9 goto label13;

        $z1 = 1;

     label02:
        if $i8 == 0 goto label03;

        if $i8 != 1 goto label14;

        if $z0 == 0 goto label14;

     label03:
        $z0 = 1;

     label04:
        if $i8 == 0 goto label05;

        if $i8 != 1 goto label15;

        if $z1 == 0 goto label15;

     label05:
        $z1 = 1;

     label06:
        $i2 = $i2 + $i0;

        if $z0 != 0 goto label07;

        $i6 = 0;

     label07:
        $i1 = $i3 + $i1;

        if $z1 != 0 goto label08;

        $i7 = 0;

     label08:
        $i3 = neg $i6;

        $i6 = $i6 + $i4;

        $i4 = neg $i7;

        $i7 = $i7 + $i5;

        $z1 = 0;

        if $i2 <= $i6 goto label16;

        $i2 = $i6;

        $z1 = 1;

     label09:
        $z0 = 0;

        if $i1 <= $i7 goto label17;

        $i1 = $i7;

        $z0 = 1;

     label10:
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void onOverScrolled(int,int,boolean,boolean)>($i2, $i1, $z1, $z0);

        if $z1 != 0 goto label11;

        if $z0 == 0 goto label18;

     label11:
        return 1;

     label12:
        $z0 = 0;

        goto label01;

     label13:
        $z1 = 0;

        goto label02;

     label14:
        $z0 = 0;

        goto label04;

     label15:
        $z1 = 0;

        goto label06;

     label16:
        if $i2 >= $i3 goto label09;

        $i2 = $i3;

        $z1 = 1;

        goto label09;

     label17:
        if $i1 >= $i4 goto label10;

        $i1 = $i4;

        $z0 = 1;

        goto label10;

     label18:
        return 0;
    }

    public boolean pageScroll(int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.graphics.Rect $r1, $r3;
        android.view.View $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 := @parameter0: int;

        if $i0 != 130 goto label3;

        $z0 = 1;

     label1:
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        if $z0 == 0 goto label4;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i2 = $i2 + $i1;

        $r1.<android.graphics.Rect: int top> = $i2;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i2 <= 0 goto label2;

        $i2 = $i2 + -1;

        $r2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>($i2);

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i2 = $r1.<android.graphics.Rect: int top>;

        $i2 = $i2 + $i1;

        $i3 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        if $i2 <= $i3 goto label2;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i3 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $i3 = $i3 - $i1;

        $r1.<android.graphics.Rect: int top> = $i3;

     label2:
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i3 = $r3.<android.graphics.Rect: int top>;

        $i3 = $i3 + $i1;

        $r1.<android.graphics.Rect: int bottom> = $i3;

        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i3 = $r3.<android.graphics.Rect: int top>;

        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i2 = $r3.<android.graphics.Rect: int bottom>;

        $z0 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean scrollAndFocus(int,int,int)>($i0, $i3, $i2);

        return $z0;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i3 = $i3 - $i1;

        $r3.<android.graphics.Rect: int top> = $i3;

        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $i3 = $r3.<android.graphics.Rect: int top>;

        if $i3 >= 0 goto label2;

        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;

        $r3.<android.graphics.Rect: int top> = 0;

        goto label2;
    }

    public void requestChildFocus(android.view.View, android.view.View)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1, $r2;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $z0 = $r0.<android.support.v4.widget.NestedScrollView: boolean mIsLayoutDirty>;

        if $z0 != 0 goto label2;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollToChild(android.view.View)>($r2);

     label1:
        specialinvoke $r0.<android.widget.FrameLayout: void requestChildFocus(android.view.View,android.view.View)>($r1, $r2);

        return;

     label2:
        $r0.<android.support.v4.widget.NestedScrollView: android.view.View mChildToScrollTo> = $r2;

        goto label1;
    }

    public boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        android.graphics.Rect $r2;
        boolean $z0;
        int $i0, $i1, $i2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        $z0 := @parameter2: boolean;

        $i0 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getScrollX()>();

        $i1 = $i0 - $i1;

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getScrollY()>();

        $i2 = $i0 - $i2;

        virtualinvoke $r2.<android.graphics.Rect: void offset(int,int)>($i1, $i2);

        $z0 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean scrollToChildRect(android.graphics.Rect,boolean)>($r2, $z0);

        return $z0;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        android.support.v4.widget.NestedScrollView $r0;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void recycleVelocityTracker()>();

     label1:
        specialinvoke $r0.<android.widget.FrameLayout: void requestDisallowInterceptTouchEvent(boolean)>($z0);

        return;
    }

    public void requestLayout()
    {
        android.support.v4.widget.NestedScrollView $r0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsLayoutDirty> = 1;

        specialinvoke $r0.<android.widget.FrameLayout: void requestLayout()>();

        return;
    }

    public void scrollTo(int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i2 <= 0 goto label2;

        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getWidth()>();

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingRight()>();

        $i3 = $i2 - $i3;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();

        $i3 = $i3 - $i2;

        $i2 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i3 = staticinvoke <android.support.v4.widget.NestedScrollView: int clamp(int,int,int)>($i0, $i3, $i2);

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        $i2 = $i2 - $i0;

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();

        $i2 = $i2 - $i0;

        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i2 = staticinvoke <android.support.v4.widget.NestedScrollView: int clamp(int,int,int)>($i1, $i2, $i0);

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        if $i3 != $i1 goto label1;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        if $i2 == $i1 goto label3;

     label1:
        specialinvoke $r0.<android.widget.FrameLayout: void scrollTo(int,int)>($i3, $i2);

        return;

     label2:
        return;

     label3:
        return;
    }

    public void setFillViewport(boolean)
    {
        android.support.v4.widget.NestedScrollView $r0;
        boolean $z0, $z1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<android.support.v4.widget.NestedScrollView: boolean mFillViewport>;

        if $z0 == $z1 goto label1;

        $r0.<android.support.v4.widget.NestedScrollView: boolean mFillViewport> = $z0;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void requestLayout()>();

        return;

     label1:
        return;
    }

    public void setNestedScrollingEnabled(boolean)
    {
        android.support.v4.widget.NestedScrollView $r0;
        boolean $z0;
        android.support.v4.view.NestedScrollingChildHelper $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;

        virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>($z0);

        return;
    }

    public void setSmoothScrollingEnabled(boolean)
    {
        android.support.v4.widget.NestedScrollView $r0;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $z0 := @parameter0: boolean;

        $r0.<android.support.v4.widget.NestedScrollView: boolean mSmoothScrollingEnabled> = $z0;

        return;
    }

    public boolean shouldDelayChildPressedState()
    {
        android.support.v4.widget.NestedScrollView $r0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        return 1;
    }

    public final void smoothScrollBy(int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i3;
        long $l2, $l4;
        byte $b5;
        android.view.View $r1;
        android.support.v4.widget.ScrollerCompat $r2;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();

        if $i3 != 0 goto label1;

        return;

     label1:
        $l4 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $l2 = $r0.<android.support.v4.widget.NestedScrollView: long mLastScroll>;

        $l2 = $l4 - $l2;

        $b5 = $l2 cmp 250L;

        if $b5 <= 0 goto label3;

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();

        $i3 = $i3 - $i0;

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();

        $i0 = $i3 - $i0;

        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);

        $i3 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i3 = $i3 - $i0;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i1 = $i0 + $i1;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i3);

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        $i3 = $i3 - $i0;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: void startScroll(int,int,int,int)>($i1, $i0, 0, $i3);

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>($r0);

     label2:
        $l4 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $r0.<android.support.v4.widget.NestedScrollView: long mLastScroll> = $l4;

        return;

     label3:
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: boolean isFinished()>();

        if $z0 != 0 goto label4;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;

        virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: void abortAnimation()>();

     label4:
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollBy(int,int)>($i0, $i1);

        goto label2;
    }

    public final void smoothScrollTo(int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();

        $i2 = $i0 - $i2;

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

        $i1 = $i1 - $i0;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void smoothScrollBy(int,int)>($i2, $i1);

        return;
    }

    public boolean startNestedScroll(int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0;
        android.support.v4.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;

        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean startNestedScroll(int)>($i0);

        return $z0;
    }

    public void stopNestedScroll()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.support.v4.view.NestedScrollingChildHelper $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;

        virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: void stopNestedScroll()>();

        return;
    }
}
