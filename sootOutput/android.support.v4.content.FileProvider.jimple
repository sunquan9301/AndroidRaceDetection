public class android.support.v4.content.FileProvider extends android.content.ContentProvider
{
    private static final java.lang.String[] COLUMNS;
    private static final java.io.File DEVICE_ROOT;
    private static java.util.HashMap sCache;
    private android.support.v4.content.FileProvider$PathStrategy mStrategy;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.io.File $r1;
        java.util.HashMap $r2;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "_display_name";

        $r0[1] = "_size";

        <android.support.v4.content.FileProvider: java.lang.String[] COLUMNS> = $r0;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/");

        <android.support.v4.content.FileProvider: java.io.File DEVICE_ROOT> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        <android.support.v4.content.FileProvider: java.util.HashMap sCache> = $r2;

        return;
    }

    public void <init>()
    {
        android.support.v4.content.FileProvider $r0;

        $r0 := @this: android.support.v4.content.FileProvider;

        specialinvoke $r0.<android.content.ContentProvider: void <init>()>();

        return;
    }

    private static transient java.io.File buildPath(java.io.File, java.lang.String[])
    {
        java.io.File $r0, $r3;
        java.lang.String[] $r1;
        int $i0, $i1;
        java.lang.String $r2;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: java.lang.String[];

        $i1 = lengthof $r1;

        $i0 = 0;

     label1:
        if $i0 >= $i1 goto label3;

        $r2 = $r1[$i0];

        if $r2 == null goto label4;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r0, $r2);

     label2:
        $i0 = $i0 + 1;

        $r0 = $r3;

        goto label1;

     label3:
        return $r0;

     label4:
        $r3 = $r0;

        goto label2;
    }

    private static java.lang.Object[] copyOf(java.lang.Object[], int)
    {
        java.lang.Object[] $r0, $r1;
        int $i0;

        $r0 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        $r1 = newarray (java.lang.Object)[$i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r1, 0, $i0);

        return $r1;
    }

    private static java.lang.String[] copyOf(java.lang.String[], int)
    {
        java.lang.String[] $r0, $r1;
        int $i0;

        $r0 := @parameter0: java.lang.String[];

        $i0 := @parameter1: int;

        $r1 = newarray (java.lang.String)[$i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r1, 0, $i0);

        return $r1;
    }

    private static android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        java.io.IOException $r2;
        java.util.HashMap $r3, $r4;
        java.lang.Object $r5;
        android.support.v4.content.FileProvider$PathStrategy $r6, $r7;
        java.lang.IllegalArgumentException $r8;
        java.lang.Throwable $r9;
        org.xmlpull.v1.XmlPullParserException $r10;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r4 = <android.support.v4.content.FileProvider: java.util.HashMap sCache>;

        entermonitor $r4;

     label01:
        $r3 = <android.support.v4.content.FileProvider: java.util.HashMap sCache>;

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (android.support.v4.content.FileProvider$PathStrategy) $r5;

     label02:
        if $r6 != null goto label06;

     label03:
        $r7 = staticinvoke <android.support.v4.content.FileProvider: android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String)>($r0, $r1);

     label04:
        $r6 = $r7;

     label05:
        $r3 = <android.support.v4.content.FileProvider: java.util.HashMap sCache>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r7);

     label06:
        exitmonitor $r4;

     label07:
        return $r6;

     label08:
        $r2 := @caughtexception;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to parse android.support.FILE_PROVIDER_PATHS meta-data", $r2);

        throw $r8;

     label09:
        $r9 := @caughtexception;

        exitmonitor $r4;

     label10:
        throw $r9;

     label11:
        $r10 := @caughtexception;

     label12:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to parse android.support.FILE_PROVIDER_PATHS meta-data", $r10);

        throw $r8;

     label13:
        nop;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.io.IOException from label03 to label04 with label08;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label11;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label07 with label09;
        catch java.lang.Throwable from label08 to label10 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
    }

    private static int modeToMode(java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.StringBuilder $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = "r";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        return 268435456;

     label1:
        $r1 = "w";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label2;

        $r1 = "wt";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

     label2:
        return 738197504;

     label3:
        $r1 = "wa";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label4;

        return 704643072;

     label4:
        $r1 = "rw";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label5;

        return 939524096;

     label5:
        $r1 = "rwt";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label6;

        return 1006632960;

     label6:
        $r3 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid mode: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r3;
    }

    private static android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context, java.lang.String) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.Context $r0;
        java.lang.String $r1, $r8, $r9, $r10;
        android.support.v4.content.FileProvider$SimplePathStrategy $r2;
        java.io.File $r3;
        android.content.pm.PackageManager $r4;
        android.content.pm.ProviderInfo $r5;
        android.content.res.XmlResourceParser $r6;
        java.lang.IllegalArgumentException $r7;
        int $i0;
        boolean $z0;
        java.lang.String[] $r11;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = new android.support.v4.content.FileProvider$SimplePathStrategy;

        specialinvoke $r2.<android.support.v4.content.FileProvider$SimplePathStrategy: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>($r1, 128);

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r6 = virtualinvoke $r5.<android.content.pm.ProviderInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>($r4, "android.support.FILE_PROVIDER_PATHS");

        if $r6 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing android.support.FILE_PROVIDER_PATHS meta-data");

        throw $r7;

     label1:
        $i0 = interfaceinvoke $r6.<android.content.res.XmlResourceParser: int next()>();

        if $i0 == 1 goto label6;

        if $i0 != 2 goto label1;

        $r1 = interfaceinvoke $r6.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $r8 = interfaceinvoke $r6.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r9 = interfaceinvoke $r6.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "path");

        $r3 = null;

        $r10 = "root-path";

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $r3 = <android.support.v4.content.FileProvider: java.io.File DEVICE_ROOT>;

        $r11 = newarray (java.lang.String)[1];

        $r11[0] = $r9;

        $r3 = staticinvoke <android.support.v4.content.FileProvider: java.io.File buildPath(java.io.File,java.lang.String[])>($r3, $r11);

     label2:
        if $r3 == null goto label1;

        virtualinvoke $r2.<android.support.v4.content.FileProvider$SimplePathStrategy: void addRoot(java.lang.String,java.io.File)>($r8, $r3);

        goto label1;

     label3:
        $r10 = "files-path";

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke $r0.<android.content.Context: java.io.File getFilesDir()>();

        $r11 = newarray (java.lang.String)[1];

        $r11[0] = $r9;

        $r3 = staticinvoke <android.support.v4.content.FileProvider: java.io.File buildPath(java.io.File,java.lang.String[])>($r3, $r11);

        goto label2;

     label4:
        $r10 = "cache-path";

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label5;

        $r3 = virtualinvoke $r0.<android.content.Context: java.io.File getCacheDir()>();

        $r11 = newarray (java.lang.String)[1];

        $r11[0] = $r9;

        $r3 = staticinvoke <android.support.v4.content.FileProvider: java.io.File buildPath(java.io.File,java.lang.String[])>($r3, $r11);

        goto label2;

     label5:
        $r10 = "external-path";

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r11 = newarray (java.lang.String)[1];

        $r11[0] = $r9;

        $r3 = staticinvoke <android.support.v4.content.FileProvider: java.io.File buildPath(java.io.File,java.lang.String[])>($r3, $r11);

        goto label2;

     label6:
        return $r2;
    }

    public void attachInfo(android.content.Context, android.content.pm.ProviderInfo)
    {
        android.support.v4.content.FileProvider $r0;
        android.content.Context $r1;
        android.content.pm.ProviderInfo $r2;
        boolean $z0;
        android.support.v4.content.FileProvider$PathStrategy $r3;
        java.lang.SecurityException $r4;
        java.lang.String $r5;

        $r0 := @this: android.support.v4.content.FileProvider;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.pm.ProviderInfo;

        specialinvoke $r0.<android.content.ContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>($r1, $r2);

        $z0 = $r2.<android.content.pm.ProviderInfo: boolean exported>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.SecurityException;

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>("Provider must not be exported");

        throw $r4;

     label1:
        $z0 = $r2.<android.content.pm.ProviderInfo: boolean grantUriPermissions>;

        if $z0 != 0 goto label2;

        $r4 = new java.lang.SecurityException;

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>("Provider must grant uri permissions");

        throw $r4;

     label2:
        $r5 = $r2.<android.content.pm.ProviderInfo: java.lang.String authority>;

        $r3 = staticinvoke <android.support.v4.content.FileProvider: android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String)>($r1, $r5);

        $r0.<android.support.v4.content.FileProvider: android.support.v4.content.FileProvider$PathStrategy mStrategy> = $r3;

        return;
    }

    public int delete(android.net.Uri, java.lang.String, java.lang.String[])
    {
        android.support.v4.content.FileProvider $r0;
        android.net.Uri $r1;
        java.lang.String $r2;
        java.lang.String[] $r3;
        android.support.v4.content.FileProvider$PathStrategy $r4;
        java.io.File $r5;
        boolean $z0;

        $r0 := @this: android.support.v4.content.FileProvider;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String[];

        $r4 = $r0.<android.support.v4.content.FileProvider: android.support.v4.content.FileProvider$PathStrategy mStrategy>;

        $r5 = interfaceinvoke $r4.<android.support.v4.content.FileProvider$PathStrategy: java.io.File getFileForUri(android.net.Uri)>($r1);

        $z0 = virtualinvoke $r5.<java.io.File: boolean delete()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String getType(android.net.Uri)
    {
        android.support.v4.content.FileProvider $r0;
        android.net.Uri $r1;
        android.support.v4.content.FileProvider$PathStrategy $r2;
        java.io.File $r3;
        java.lang.String $r4;
        int $i0;
        android.webkit.MimeTypeMap $r5;

        $r0 := @this: android.support.v4.content.FileProvider;

        $r1 := @parameter0: android.net.Uri;

        $r2 = $r0.<android.support.v4.content.FileProvider: android.support.v4.content.FileProvider$PathStrategy mStrategy>;

        $r3 = interfaceinvoke $r2.<android.support.v4.content.FileProvider$PathStrategy: java.io.File getFileForUri(android.net.Uri)>($r1);

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int lastIndexOf(int)>(46);

        if $i0 < 0 goto label1;

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>();

        $i0 = $i0 + 1;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>($i0);

        $r5 = staticinvoke <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>();

        $r4 = virtualinvoke $r5.<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>($r4);

        if $r4 == null goto label1;

        return $r4;

     label1:
        return "application/octet-stream";
    }

    public android.net.Uri insert(android.net.Uri, android.content.ContentValues)
    {
        android.support.v4.content.FileProvider $r0;
        android.net.Uri $r1;
        android.content.ContentValues $r2;
        java.lang.UnsupportedOperationException $r3;

        $r0 := @this: android.support.v4.content.FileProvider;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.ContentValues;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("No external inserts");

        throw $r3;
    }

    public boolean onCreate()
    {
        android.support.v4.content.FileProvider $r0;

        $r0 := @this: android.support.v4.content.FileProvider;

        return 1;
    }

    public android.os.ParcelFileDescriptor openFile(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.support.v4.content.FileProvider $r0;
        android.net.Uri $r1;
        java.lang.String $r2;
        android.support.v4.content.FileProvider$PathStrategy $r3;
        java.io.File $r4;
        int $i0;
        android.os.ParcelFileDescriptor $r5;

        $r0 := @this: android.support.v4.content.FileProvider;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        $r3 = $r0.<android.support.v4.content.FileProvider: android.support.v4.content.FileProvider$PathStrategy mStrategy>;

        $r4 = interfaceinvoke $r3.<android.support.v4.content.FileProvider$PathStrategy: java.io.File getFileForUri(android.net.Uri)>($r1);

        $i0 = staticinvoke <android.support.v4.content.FileProvider: int modeToMode(java.lang.String)>($r2);

        $r5 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r4, $i0);

        return $r5;
    }

    public android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        android.support.v4.content.FileProvider $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2, $r4, $r6;
        java.lang.String $r3, $r5;
        android.database.MatrixCursor $r7;
        int $i0, $i1, $i2, $i3;
        java.lang.Object[] $r8;
        android.support.v4.content.FileProvider$PathStrategy $r9;
        java.io.File $r10;
        boolean $z0;
        long $l4;
        java.lang.Long $r11;

        $r0 := @this: android.support.v4.content.FileProvider;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String[];

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        $r5 := @parameter4: java.lang.String;

        $r9 = $r0.<android.support.v4.content.FileProvider: android.support.v4.content.FileProvider$PathStrategy mStrategy>;

        $r10 = interfaceinvoke $r9.<android.support.v4.content.FileProvider$PathStrategy: java.io.File getFileForUri(android.net.Uri)>($r1);

        if $r2 != null goto label1;

        $r2 = <android.support.v4.content.FileProvider: java.lang.String[] COLUMNS>;

     label1:
        $i2 = lengthof $r2;

        $r6 = newarray (java.lang.String)[$i2];

        $i2 = lengthof $r2;

        $r8 = newarray (java.lang.Object)[$i2];

        $r4 = $r2;

        $i2 = lengthof $r2;

        $i1 = 0;

        $i0 = 0;

     label2:
        if $i1 >= $i2 goto label5;

        $r5 = $r4[$i1];

        $r3 = "_display_name";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label4;

        $r6[$i0] = "_display_name";

        $i3 = $i0 + 1;

        $r5 = virtualinvoke $r10.<java.io.File: java.lang.String getName()>();

        $r8[$i0] = $r5;

     label3:
        $i1 = $i1 + 1;

        $i0 = $i3;

        goto label2;

     label4:
        $r3 = "_size";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label6;

        $r6[$i0] = "_size";

        $i3 = $i0 + 1;

        $l4 = virtualinvoke $r10.<java.io.File: long length()>();

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r8[$i0] = $r11;

        goto label3;

     label5:
        $r6 = staticinvoke <android.support.v4.content.FileProvider: java.lang.String[] copyOf(java.lang.String[],int)>($r6, $i0);

        $r8 = staticinvoke <android.support.v4.content.FileProvider: java.lang.Object[] copyOf(java.lang.Object[],int)>($r8, $i0);

        $r7 = new android.database.MatrixCursor;

        specialinvoke $r7.<android.database.MatrixCursor: void <init>(java.lang.String[],int)>($r6, 1);

        virtualinvoke $r7.<android.database.MatrixCursor: void addRow(java.lang.Object[])>($r8);

        return $r7;

     label6:
        $i3 = $i0;

        goto label3;
    }

    public int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        android.support.v4.content.FileProvider $r0;
        android.net.Uri $r1;
        android.content.ContentValues $r2;
        java.lang.String $r3;
        java.lang.String[] $r4;
        java.lang.UnsupportedOperationException $r5;

        $r0 := @this: android.support.v4.content.FileProvider;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.ContentValues;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("No external updates");

        throw $r5;
    }
}
