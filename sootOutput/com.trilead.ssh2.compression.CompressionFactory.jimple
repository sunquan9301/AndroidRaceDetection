public class com.trilead.ssh2.compression.CompressionFactory extends java.lang.Object
{
    static java.util.Vector compressors;

    static void <clinit>()
    {
        java.util.Vector $r0;
        com.trilead.ssh2.compression.CompressionFactory$CompressorEntry $r1;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        <com.trilead.ssh2.compression.CompressionFactory: java.util.Vector compressors> = $r0;

        $r0 = <com.trilead.ssh2.compression.CompressionFactory: java.util.Vector compressors>;

        $r1 = new com.trilead.ssh2.compression.CompressionFactory$CompressorEntry;

        specialinvoke $r1.<com.trilead.ssh2.compression.CompressionFactory$CompressorEntry: void <init>(java.lang.String,java.lang.String)>("zlib", "com.trilead.ssh2.compression.Zlib");

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        $r0 = <com.trilead.ssh2.compression.CompressionFactory: java.util.Vector compressors>;

        $r1 = new com.trilead.ssh2.compression.CompressionFactory$CompressorEntry;

        specialinvoke $r1.<com.trilead.ssh2.compression.CompressionFactory$CompressorEntry: void <init>(java.lang.String,java.lang.String)>("zlib@openssh.com", "com.trilead.ssh2.compression.ZlibOpenSSH");

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        $r0 = <com.trilead.ssh2.compression.CompressionFactory: java.util.Vector compressors>;

        $r1 = new com.trilead.ssh2.compression.CompressionFactory$CompressorEntry;

        specialinvoke $r1.<com.trilead.ssh2.compression.CompressionFactory$CompressorEntry: void <init>(java.lang.String,java.lang.String)>("none", "");

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        return;
    }

    public void <init>()
    {
        com.trilead.ssh2.compression.CompressionFactory $r0;

        $r0 := @this: com.trilead.ssh2.compression.CompressionFactory;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.trilead.ssh2.compression.ICompressor createCompressor(java.lang.String)
    {
        java.lang.String $r0, $r3, $r4;
        com.trilead.ssh2.compression.ICompressor $r1;
        java.lang.Exception $r2;
        com.trilead.ssh2.compression.CompressionFactory$CompressorEntry $r5;
        boolean $z0;
        java.lang.Class $r6;
        java.lang.Object $r7;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r5 = staticinvoke <com.trilead.ssh2.compression.CompressionFactory: com.trilead.ssh2.compression.CompressionFactory$CompressorEntry getEntry(java.lang.String)>($r0);

        $r3 = "";

        $r4 = $r5.<com.trilead.ssh2.compression.CompressionFactory$CompressorEntry: java.lang.String compressorClass>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

     label2:
        return null;

     label3:
        $r4 = $r5.<com.trilead.ssh2.compression.CompressionFactory$CompressorEntry: java.lang.String compressorClass>;

        $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r4);

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.Object newInstance()>();

        $r1 = (com.trilead.ssh2.compression.ICompressor) $r7;

     label4:
        return $r1;

     label5:
        $r2 := @caughtexception;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot instantiate ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static java.lang.String[] getDefaultCompressorList()
    {
        int $i0, $i1;
        java.lang.String[] $r0;
        java.util.Vector $r1;
        java.lang.String $r2, $r5;
        java.lang.Object $r3;
        com.trilead.ssh2.compression.CompressionFactory$CompressorEntry $r4;

        $r1 = <com.trilead.ssh2.compression.CompressionFactory: java.util.Vector compressors>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        $r0 = newarray (java.lang.String)[$i0];

        $i0 = 0;

     label1:
        $r1 = <com.trilead.ssh2.compression.CompressionFactory: java.util.Vector compressors>;

        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label2;

        $r1 = <com.trilead.ssh2.compression.CompressionFactory: java.util.Vector compressors>;

        $r3 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r4 = (com.trilead.ssh2.compression.CompressionFactory$CompressorEntry) $r3;

        $r5 = new java.lang.String;

        $r2 = $r4.<com.trilead.ssh2.compression.CompressionFactory$CompressorEntry: java.lang.String type>;

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>($r2);

        $r0[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static com.trilead.ssh2.compression.CompressionFactory$CompressorEntry getEntry(java.lang.String)
    {
        java.lang.String $r0, $r5;
        int $i0, $i1;
        java.util.Vector $r1;
        java.lang.StringBuilder $r2;
        java.lang.Object $r3;
        com.trilead.ssh2.compression.CompressionFactory$CompressorEntry $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r6;

        $r0 := @parameter0: java.lang.String;

        $i0 = 0;

     label1:
        $r1 = <com.trilead.ssh2.compression.CompressionFactory: java.util.Vector compressors>;

        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label3;

        $r1 = <com.trilead.ssh2.compression.CompressionFactory: java.util.Vector compressors>;

        $r3 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r4 = (com.trilead.ssh2.compression.CompressionFactory$CompressorEntry) $r3;

        $r5 = $r4.<com.trilead.ssh2.compression.CompressionFactory$CompressorEntry: java.lang.String type>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

        return $r4;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r6 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unkown algorithm ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r6;
    }
}
