public class com.trilead.ssh2.packets.PacketChannelOpenConfirmation extends java.lang.Object
{
    public int initialWindowSize;
    public int maxPacketSize;
    byte[] payload;
    public int recipientChannelID;
    public int senderChannelID;

    public void <init>(int, int, int, int)
    {
        com.trilead.ssh2.packets.PacketChannelOpenConfirmation $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: com.trilead.ssh2.packets.PacketChannelOpenConfirmation;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.trilead.ssh2.packets.PacketChannelOpenConfirmation: int recipientChannelID> = $i0;

        $r0.<com.trilead.ssh2.packets.PacketChannelOpenConfirmation: int senderChannelID> = $i1;

        $r0.<com.trilead.ssh2.packets.PacketChannelOpenConfirmation: int initialWindowSize> = $i2;

        $r0.<com.trilead.ssh2.packets.PacketChannelOpenConfirmation: int maxPacketSize> = $i3;

        return;
    }

    public void <init>(byte[], int, int) throws java.io.IOException
    {
        com.trilead.ssh2.packets.PacketChannelOpenConfirmation $r0;
        byte[] $r1, $r3;
        int $i0, $i1;
        com.trilead.ssh2.packets.TypesReader $r2;
        java.io.IOException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @this: com.trilead.ssh2.packets.PacketChannelOpenConfirmation;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = newarray (byte)[$i1];

        $r0.<com.trilead.ssh2.packets.PacketChannelOpenConfirmation: byte[] payload> = $r3;

        $r3 = $r0.<com.trilead.ssh2.packets.PacketChannelOpenConfirmation: byte[] payload>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r3, 0, $i1);

        $r2 = new com.trilead.ssh2.packets.TypesReader;

        specialinvoke $r2.<com.trilead.ssh2.packets.TypesReader: void <init>(byte[],int,int)>($r1, $i0, $i1);

        $i1 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: int readByte()>();

        if $i1 == 91 goto label1;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This is not a SSH_MSG_CHANNEL_OPEN_CONFIRMATION! (");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label1:
        $i1 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: int readUINT32()>();

        $r0.<com.trilead.ssh2.packets.PacketChannelOpenConfirmation: int recipientChannelID> = $i1;

        $i1 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: int readUINT32()>();

        $r0.<com.trilead.ssh2.packets.PacketChannelOpenConfirmation: int senderChannelID> = $i1;

        $i1 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: int readUINT32()>();

        $r0.<com.trilead.ssh2.packets.PacketChannelOpenConfirmation: int initialWindowSize> = $i1;

        $i1 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: int readUINT32()>();

        $r0.<com.trilead.ssh2.packets.PacketChannelOpenConfirmation: int maxPacketSize> = $i1;

        $i1 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: int remain()>();

        if $i1 == 0 goto label2;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Padding in SSH_MSG_CHANNEL_OPEN_CONFIRMATION packet!");

        throw $r4;

     label2:
        return;
    }

    public byte[] getPayload()
    {
        com.trilead.ssh2.packets.PacketChannelOpenConfirmation $r0;
        com.trilead.ssh2.packets.TypesWriter $r1;
        byte[] $r2;
        int $i0;

        $r0 := @this: com.trilead.ssh2.packets.PacketChannelOpenConfirmation;

        $r2 = $r0.<com.trilead.ssh2.packets.PacketChannelOpenConfirmation: byte[] payload>;

        if $r2 != null goto label1;

        $r1 = new com.trilead.ssh2.packets.TypesWriter;

        specialinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void <init>()>();

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeByte(int)>(91);

        $i0 = $r0.<com.trilead.ssh2.packets.PacketChannelOpenConfirmation: int recipientChannelID>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeUINT32(int)>($i0);

        $i0 = $r0.<com.trilead.ssh2.packets.PacketChannelOpenConfirmation: int senderChannelID>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeUINT32(int)>($i0);

        $i0 = $r0.<com.trilead.ssh2.packets.PacketChannelOpenConfirmation: int initialWindowSize>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeUINT32(int)>($i0);

        $i0 = $r0.<com.trilead.ssh2.packets.PacketChannelOpenConfirmation: int maxPacketSize>;

        virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: void writeUINT32(int)>($i0);

        $r2 = virtualinvoke $r1.<com.trilead.ssh2.packets.TypesWriter: byte[] getBytes()>();

        $r0.<com.trilead.ssh2.packets.PacketChannelOpenConfirmation: byte[] payload> = $r2;

     label1:
        $r2 = $r0.<com.trilead.ssh2.packets.PacketChannelOpenConfirmation: byte[] payload>;

        return $r2;
    }
}
