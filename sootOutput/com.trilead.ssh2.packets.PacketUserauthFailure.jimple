public class com.trilead.ssh2.packets.PacketUserauthFailure extends java.lang.Object
{
    java.lang.String[] authThatCanContinue;
    boolean partialSuccess;
    byte[] payload;

    public void <init>(byte[], int, int) throws java.io.IOException
    {
        com.trilead.ssh2.packets.PacketUserauthFailure $r0;
        byte[] $r1, $r3;
        int $i0, $i1;
        com.trilead.ssh2.packets.TypesReader $r2;
        java.io.IOException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.lang.String[] $r7;
        boolean $z0;

        $r0 := @this: com.trilead.ssh2.packets.PacketUserauthFailure;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = newarray (byte)[$i1];

        $r0.<com.trilead.ssh2.packets.PacketUserauthFailure: byte[] payload> = $r3;

        $r3 = $r0.<com.trilead.ssh2.packets.PacketUserauthFailure: byte[] payload>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r3, 0, $i1);

        $r2 = new com.trilead.ssh2.packets.TypesReader;

        specialinvoke $r2.<com.trilead.ssh2.packets.TypesReader: void <init>(byte[],int,int)>($r1, $i0, $i1);

        $i1 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: int readByte()>();

        if $i1 == 51 goto label1;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This is not a SSH_MSG_USERAUTH_FAILURE! (");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label1:
        $r7 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: java.lang.String[] readNameList()>();

        $r0.<com.trilead.ssh2.packets.PacketUserauthFailure: java.lang.String[] authThatCanContinue> = $r7;

        $z0 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: boolean readBoolean()>();

        $r0.<com.trilead.ssh2.packets.PacketUserauthFailure: boolean partialSuccess> = $z0;

        $i1 = virtualinvoke $r2.<com.trilead.ssh2.packets.TypesReader: int remain()>();

        if $i1 == 0 goto label2;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Padding in SSH_MSG_USERAUTH_FAILURE packet!");

        throw $r4;

     label2:
        return;
    }

    public java.lang.String[] getAuthThatCanContinue()
    {
        com.trilead.ssh2.packets.PacketUserauthFailure $r0;
        java.lang.String[] $r1;

        $r0 := @this: com.trilead.ssh2.packets.PacketUserauthFailure;

        $r1 = $r0.<com.trilead.ssh2.packets.PacketUserauthFailure: java.lang.String[] authThatCanContinue>;

        return $r1;
    }

    public boolean isPartialSuccess()
    {
        com.trilead.ssh2.packets.PacketUserauthFailure $r0;
        boolean $z0;

        $r0 := @this: com.trilead.ssh2.packets.PacketUserauthFailure;

        $z0 = $r0.<com.trilead.ssh2.packets.PacketUserauthFailure: boolean partialSuccess>;

        return $z0;
    }
}
